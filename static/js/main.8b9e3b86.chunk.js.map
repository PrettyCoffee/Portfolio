{"version":3,"sources":["ressources/sw-link.png","ressources/me.png","ressources/fitness.png","ressources/dark-souls.png","ressources/music.png","ressources/Teacher.png","ressources/default-icon.png","containers/Home/Home.tsx","containers/About/About.tsx","containers/CV/CVCard.tsx","data/cv-data.ts","containers/CV/CV.tsx","containers/Coding/Project.tsx","containers/Coding/Coding.tsx","containers/Designs/Designs.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Home","props","className","alt","src","swlink","to","About","birthday","Date","age","getTime","me","icon","faPortrait","Math","floor","fitness","faDumbbell","darksouls","faGamepad","music","faHeart","CVCard","style","type","endDate","startDate","title","subject","details","education","facility","subjectArea","graduation","career","company","profession","subjects","CV","renderCareerElem","elem","forEach","renderEducationElem","rows","curEdu","curCar","push","length","teacher","Project","project","created","latest","lastUpdate","projectYear","getFullYear","description","slice","tags","tag","img","defIcon","name","href","url","faArrowRight","githubRepositories","gitlabRepositories","Coding","useState","projects","reload","setReload","projectsJSX","setProjectsJSX","useEffect","gitlabRep","fetch","then","res","json","result","avatar_url","web_url","created_at","last_activity_at","tag_list","sort","sortProjects","error","githubRep","html_url","pushed_at","topics","a","b","undefined","tmpPrj","prj","Designs","App","faEnvelope","faGithubAlt","faGitlab","path","faHome","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8b9e3b86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw-link.40aaf72f.png\";","module.exports = __webpack_public_path__ + \"static/media/me.093920a7.png\";","module.exports = __webpack_public_path__ + \"static/media/fitness.8b353ff9.png\";","module.exports = __webpack_public_path__ + \"static/media/dark-souls.b8ba2264.png\";","module.exports = __webpack_public_path__ + \"static/media/music.dbdca655.png\";","module.exports = __webpack_public_path__ + \"static/media/Teacher.6752dc20.png\";","module.exports = __webpack_public_path__ + \"static/media/default-icon.28517636.png\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Home.css\"\r\nimport swlink from \"../../ressources/sw-link.png\" \r\n\r\nexport function Home(props:any){\r\n    return(\r\n        <>\r\n            <div className=\"link\"><img alt=\"\" src={swlink}/></div>\r\n            <div className=\"content-header\">\r\n                <h1>Welcome!</h1>\r\n            </div>\r\n\r\n            <div className=\"content-body\">\r\n                <Link to=\"/about\"><div className=\"menu-item\">About Me</div></Link>\r\n                <Link to=\"/CV\"><div className=\"menu-item\">CV</div></Link>\r\n                <Link to=\"/coding\"><div className=\"menu-item\">Coding</div></Link>\r\n                <Link to=\"/designs\"><div className=\"menu-item\">Designs</div></Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPortrait, faGamepad, faDumbbell } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport \"./About.css\"\r\nimport me from \"../../ressources/me.png\"\r\nimport fitness from \"../../ressources/fitness.png\"\r\nimport darksouls from \"../../ressources/dark-souls.png\"\r\n//import bouldering from \"../../ressources/bouldering.png\"\r\nimport music from \"../../ressources/music.png\"\r\n\r\n\r\nexport function About(props:any){\r\n    //let age = new Date('1996-05-17T00:00:00')\r\n    let birthday = new Date(1996, 4, 17)\r\n    let age = (new Date().getTime() - birthday.getTime()) / 1000 / 60 / 60 / 24 / 365\r\n    //let age = Math.floor(new Date() - birthday)\r\n    return(\r\n        <div>\r\n            <div className=\"content-header content-header-me\">\r\n                <h1>About Me</h1>\r\n            </div>\r\n            <div className=\"pic-r\"><img alt=\"\" src={me}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Details <FontAwesomeIcon className=\"h2-icon\" icon={faPortrait}/></h2>\r\n                <p>\r\n                    Jonathan<br/>\r\n                    {Math.floor(age)} years old<br/>\r\n                    B.Sc. Informatics<br/>\r\n                    Web-Developer<br/>\r\n                </p>\r\n            </div>\r\n            <div className=\"pic-l\"><img alt=\"\" src={fitness}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Sports <FontAwesomeIcon className=\"h2-icon\" icon={faDumbbell}/></h2>\r\n                <p>\r\n                    {\"//TODO: Write something\"}\r\n                </p>\r\n            </div>\r\n            <div className=\"pic-r\"><img alt=\"\" src={darksouls}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Games <FontAwesomeIcon className=\"h2-icon\" icon={faGamepad}/></h2>\r\n                <p>\r\n                    {\"//TODO: Write something\"}\r\n                </p>\r\n            </div>\r\n            <div className=\"pic-l\"><img alt=\"\" src={music}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Music I <FontAwesomeIcon className=\"h2-icon\" icon={faHeart}/></h2>\r\n                <p>\r\n                    {\"//TODO: Write something\"}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from 'react';\r\n\r\nimport \"./CV.css\"\r\n\r\ntype props = {\r\n    type:string,\r\n    title:string,\r\n    startDate:number,\r\n    endDate:number|undefined,\r\n    subject:string,\r\n    details:string,\r\n}\r\n\r\nexport function CVCard(props:props){\r\n    var style:string\r\n    if (props.type === \"edu\") {\r\n    \tstyle=\"time-education\"\r\n    } else {\r\n    \tstyle=\"time-career\"\r\n    }\r\n    var endDate = (props.endDate === 0)? \"Now\" : props.endDate\r\n    return(\r\n        <>\r\n            <div className={style}><span>{props.startDate} - {endDate}</span></div>\r\n            <div className=\"content-body\">\r\n                <h2>{props.title}</h2>\r\n                <p>{props.subject}</p>\r\n                <p>{props.details}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CVCard","export type education_item = {\r\n    startDate:number,\r\n    endDate:number,\r\n    facility:string,\r\n    subjectArea:string,\r\n    graduation:string,\r\n}\r\nexport const education:education_item[] = [\r\n    {\r\n        startDate: 2017,\r\n        endDate:0,\r\n        facility:\"Cooperative State University Stuttgart\",\r\n        subjectArea:\"Informatics\",\r\n        graduation:\"Bachelor of Science\",\r\n    },\r\n    {\r\n        startDate: 2015,\r\n        endDate:2017,\r\n        facility:\"Gottlieb-Daimler-Schule 2\",\r\n        subjectArea:\"Industrial Design\",\r\n        graduation:\"State-certified industrial design assistant; Advanced technical college certificate\",\r\n    },\r\n    {\r\n        startDate: 2012,\r\n        endDate:2015,\r\n        facility:\"Steinbeisschule Stuttgart\",\r\n        subjectArea:\"Carpentry\",\r\n        graduation:\"Carpenter journeyman's certificate\",\r\n    },\r\n]\r\n\r\nexport type career_item = {\r\n    startDate:number,\r\n    endDate:number,\r\n    company:string,\r\n    profession:string,\r\n    subjects:string[],\r\n}\r\nexport const career:career_item[] = [\r\n    {\r\n        startDate:2017,\r\n        endDate:0,\r\n        company:\"heureka e-Business GmbH\",\r\n        profession:\"Web-Development\",\r\n        subjects:[\"ColdFusion\", \"React\", \"MariaDB\"],\r\n    },\r\n    {\r\n        startDate:2012,\r\n        endDate:2015,\r\n        company:\"Scheyhing Holzbau GmbH\",\r\n        profession:\"Carpentry\",\r\n        subjects:[]\r\n    },\r\n]","import React from 'react';\r\nimport CVCard from \"./CVCard\"\r\n\r\nimport teacher from \"../../ressources/Teacher.png\"\r\nimport \"./CV.css\"\r\nimport {education_item, education, career_item, career} from \"../../data/cv-data\"\r\n\r\nexport function CV(props:any){\r\n\r\n    //Get CVCard with career details\r\n    let renderCareerElem = (elem:career_item) => {\r\n        let subjects:string = \"\"\r\n        if (elem.subjects) {\r\n            elem.subjects.forEach(subject => {\r\n                subjects += subject+\"; \"\r\n            });\r\n        }\r\n        return (\r\n            <CVCard\r\n                type={\"car\"}\r\n                title={elem.company}\r\n                startDate={elem.startDate}\r\n                endDate={elem.endDate}\r\n                subject={elem.profession}\r\n                details={subjects}\r\n            />\r\n        )\r\n    }\r\n            \r\n    //Get CVCard with education details\r\n    let renderEducationElem = (elem:education_item) => {\r\n        return (\r\n            <CVCard\r\n                type={\"edu\"}\r\n                title={elem.facility}\r\n                startDate={elem.startDate}\r\n                endDate={elem.endDate}\r\n                subject={elem.subjectArea}\r\n                details={elem.graduation}\r\n            />\r\n        )\r\n    }\r\n\r\n    //Get alle rows of cv\r\n    let rows:JSX.Element[] = []\r\n    let curEdu = 0\r\n    let curCar = 0\r\n    for (;true;) {\r\n        if (education[curEdu] && career[curCar] && education[curEdu].endDate === career[curCar].endDate) {\r\n            rows.push(\r\n                <div className=\"cv-row\">\r\n                    {renderCareerElem(career[curCar])}\r\n                    {renderEducationElem(education[curEdu])}\r\n                </div>\r\n            )\r\n            curEdu++\r\n            curCar++\r\n        } else {\r\n            if (!education[curEdu]\r\n                || career[curCar].endDate === 0\r\n                || (career[curCar] && career[curCar].endDate > education[curEdu]?.endDate)) {\r\n                rows.push(\r\n                    <div className=\"cv-row\">\r\n                        {renderCareerElem(career[curCar])}\r\n                        <span className=\"empty-cv-card\"></span>\r\n                    </div>\r\n                )\r\n                curCar++\r\n            } else if (education[curEdu]) {\r\n                rows.push(\r\n                    <div className=\"cv-row\">\r\n                        <span className=\"empty-cv-card\"></span>\r\n                        {renderEducationElem(education[curEdu])}\r\n                    </div>\r\n                )\r\n                curEdu++\r\n            }\r\n        }\r\n        if (curEdu === education.length && curCar === career.length) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"cv-content\">\r\n                <div className=\"cv-row\">\r\n                    <div className=\"content-header cv-desktop-header\">\r\n                        <h1>Career</h1>\r\n                    </div>\r\n                    <div className=\"content-header cv-desktop-header\">\r\n                        <h1>Education</h1>\r\n                    </div>\r\n                    <div className=\"content-header cv-mobile-header\">\r\n                        <h1>{\"Career|Education\"}</h1>\r\n                    </div>\r\n                    <div className=\"teacher\"><img alt=\"\" src={teacher}/></div>\r\n                </div>\r\n                {rows}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CV","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport \"./Coding.css\"\r\nimport defIcon from \"../../ressources/default-icon.png\"\r\n\r\ntype project = {\r\n    img:string,\r\n    name:string,\r\n    description:string,\r\n    url:string,\r\n    created:string,\r\n    lastUpdate:string,\r\n    tags:string[],\r\n}\r\n\r\nexport function Project(project:project){\r\n    var created = new Date(project.created)\r\n    var latest = new Date(project.lastUpdate)\r\n    var projectYear:string = (created.getFullYear() === latest.getFullYear())?created.getFullYear()+\"\":created.getFullYear() + \"-\" + latest.getFullYear()\r\n\r\n    var description = (project.description.length > 77)?project.description.slice(0,77)+\"...\":project.description\r\n\r\n    var tags:JSX.Element[] = []\r\n    project.tags.forEach(tag => {\r\n        tags.push(\r\n            <span>\r\n                {tag}\r\n            </span>\r\n        )\r\n    });\r\n    return(\r\n        <>\r\n            <div className=\"time-project\"><span>{projectYear}</span></div>\r\n            <div className=\"project-container\">\r\n                <div className=\"project-image\"><img src={(project.img)?project.img:defIcon} alt=\"Project Avatar\"/></div>\r\n                <div className=\"project-details\">\r\n                    <h2>{project.name}</h2>\r\n                    <div className=\"tag-container\">{tags}</div>\r\n                    <p className=\"project-description\">\r\n                        {(project.description !== \"\")?description:\"No description available\"}\r\n                    </p>\r\n                    <a className=\"project-button\" href={project.url}>Go to Project <FontAwesomeIcon icon={faArrowRight}/></a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n//<div>latest change: {latest.toLocaleDateString('en-US')}</div>\r\nexport default Project","import React, { useState, useEffect } from 'react';\r\nimport Project from \"./Project\"\r\nimport \"./Coding.css\"\r\n\r\ntype project = {\r\n    img:string,\r\n    name:string,\r\n    description:string,\r\n    url:string,\r\n    created:string,\r\n    lastUpdate:string,\r\n    tags:string[],\r\n}\r\n\r\n/*\r\nGthub Repo:\r\n    https://api.github.com/repos/PrettyCoffee/PrettyCoffee.github.io\r\nGet Content of Repo: \r\n    https://api.github.com/repos/PrettyCoffee/PrettyCoffee.github.io/contents\r\n*/\r\n\r\nconst githubRepositories = [\r\n    \"PrettyCoffee/PrettyCoffee.github.io\",\r\n]\r\n\r\nconst gitlabRepositories = [\r\n    \"14827017\",\r\n    \"14252893\",\r\n    \"16123962\",\r\n]\r\n\r\nexport function Coding(props:any){\r\n    //let projects:project[] = []\r\n    const [projects, setProjects]:project[] | any = useState([]);\r\n    const [reload, setReload]:boolean | any = useState(true);\r\n    const [projectsJSX, setProjectsJSX]:JSX.Element[] | any = useState([\"abc\", \"1223\"]);\r\n    \r\n    //get all wanted projects\r\n    useEffect(() => {\r\n        gitlabRepositories.forEach(gitlabRep => {\r\n            fetch(\"https://gitlab.com/api/v4/projects/\"+gitlabRep+\"/\")\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                projects.push({\r\n                    img:        result.avatar_url,\r\n                    name:       result.name,\r\n                    description:result.description,\r\n                    url:        result.web_url,\r\n                    created:    result.created_at,\r\n                    lastUpdate: result.last_activity_at,\r\n                    tags:       (result.tag_list)?result.tag_list:[],\r\n                })\r\n                /*\r\n                setProjects(...projects,{\r\n                    img:        result.avatar_url,\r\n                    name:       result.name,\r\n                    description:result.description,\r\n                    url:        result.web_url,\r\n                    created:    result.created_at,\r\n                    lastUpdate: result.last_activity_at,\r\n                    tags:       result.tag_list,\r\n                })\r\n                */\r\n                projects.sort(sortProjects)\r\n                setReload(true)\r\n            },\r\n                (error) => {\r\n                    //Todo: Create error handling \r\n                }\r\n            )    \r\n        });\r\n        githubRepositories.forEach(githubRep => {\r\n            fetch(\"https://api.github.com/repos/\"+githubRep)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                projects.push({\r\n                    img:        null,\r\n                    name:       result.name,\r\n                    description:result.description,\r\n                    url:        result.html_url,\r\n                    created:    result.created_at,\r\n                    lastUpdate: result.pushed_at,\r\n                    tags:       (result.topics)?result.topics:[],\r\n                })\r\n                projects.sort(sortProjects)\r\n                setReload(true)\r\n            },\r\n                (error) => {\r\n                    //Todo: Create error handling \r\n                }\r\n            )    \r\n        });\r\n    },[]);\r\n\r\n    var sortProjects = (a:project,b:project) => {\r\n        return new Date(b.lastUpdate).getTime() - new Date(a.lastUpdate).getTime()\r\n    }\r\n\r\n    //Update jsx if project is added\r\n    useEffect(() => {\r\n        if(projects !== undefined && reload === true) {\r\n            var tmpPrj:JSX.Element[] = []\r\n            projects.forEach((prj:project) => {\r\n                tmpPrj.push(\r\n                    <Project\r\n                        {...prj}\r\n                    />\r\n                )\r\n                setProjectsJSX(tmpPrj)\r\n            })\r\n            setReload(false)\r\n        }\r\n    }, [reload, projects, projectsJSX])\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"content-header coding-header\">\r\n                <h1>Coding Projects</h1>\r\n            </div>\r\n            <div>\r\n            {projectsJSX}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Coding","import React from 'react';\r\n\r\n\r\nexport function Designs(props:any){\r\n    return(\r\n        <div>\r\n            {\"//TODO\"}\r\n        </div>\r\n    )\r\n}\r\nexport default Designs","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faGithubAlt, faGitlab } from '@fortawesome/free-brands-svg-icons'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n//My Sites\nimport Home from \"./containers/Home/Home\"\nimport About from \"./containers/About/About\"\nimport CV from \"./containers/CV/CV\"\nimport Coding from \"./containers/Coding/Coding\"\nimport Designs from \"./containers/Designs/Designs\"\n\n//My Styles\nimport \"./App.css\"\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"content-wrapper\">\n\t\t\t<div className=\"icon-container\">\n\t\t\t\t<a href=\"MailTo:jonathan-holz@outlook.com\">\n\t\t\t\t\t<FontAwesomeIcon  icon={faEnvelope}/>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://github.com/PrettyCoffee\">\n\t\t\t\t\t<FontAwesomeIcon  icon={faGithubAlt}/>\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://gitlab.com/PrettyCoffee\">\n\t\t\t\t\t<FontAwesomeIcon  icon={faGitlab}/>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<Router>\n\t\t\t\t<Switch >\n\t\t\t\t\t<Route path=\"/designs\">\n\t\t\t\t\t\t<Designs />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/Coding\">\n\t\t\t\t\t\t<Coding />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/CV\">\n\t\t\t\t\t\t<CV />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t\t<Link to=\"/\"><div className=\"back\"><FontAwesomeIcon icon={faHome}/></div></Link>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}
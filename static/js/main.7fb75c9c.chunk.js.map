{"version":3,"sources":["components/Theme/getTheme.ts","components/Theme/ThemeProvider.tsx","components/Button/Button.tsx","components/Scrollspy/fragments/ScrollspyMenu.tsx","components/Scrollspy/fragments/ScrollspyMenuItem.tsx","components/Scrollspy/fragments/ScrollspySeparator.tsx","components/Scrollspy/fragments/StyledScrollspy.ts","components/Scrollspy/Scrollspy.tsx","components/Scrollspy/utils/getComponents.ts","components/Scrollspy/ScrollspyContent.tsx","components/Scrollspy/ScrollspyExtra.tsx","components/Stalker/Stalker.tsx","components/Stalker/eye/iris.svg","components/Stalker/eye/pupil.svg","components/Stalker/eye/sclera.svg","components/Cards/Card.tsx","components/Cards/CardGroup.tsx","components/Typer/Typer.tsx","components/Tiles/fragments/TileContent.tsx","components/Tiles/fragments/TileTitle.tsx","components/Tiles/Tile.tsx","components/Tiles/TileGroup.tsx","components/Timeline/Timeline.tsx","components/Section/Section.tsx","data/media/logo.svg","data/media/computer.svg","data/media/smartphone.svg","data/media/tablet.svg","Portfolio/Animation.tsx","Portfolio/Intro.tsx","data/media/avatar.png","Portfolio/Profile.tsx","data/media/fluidity.svg","data/media/go-audio.png","data/media/kitty.png","data/media/smug.jpg","data/projects.ts","Portfolio/Projects/Project.tsx","Portfolio/Projects/Projects.tsx","data/media/awesome.svg","data/media/google-fonts.svg","data/media/laws-of-ux.svg","data/media/react-hooks.svg","data/media/startpages.svg","data/media/webdev.png","data/ressources.ts","Portfolio/Ressources.tsx","Portfolio/SocialMedia.tsx","Portfolio/Portfolio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["color","dark","light","grey","red","green","yellow","blue","purple","cyan","orange","space","xxs","xs","sm","md","lg","xl","xxl","border","shadow","regular","small","animation","bouncy","breakpoints","mobile","tablet","laptop","getTheme","globalStyles","css","ThemeProvider","children","styles","theme","StyledButton","styled","button","Button","icon","buttonProps","ScrollspyMenu","div","StyledMenuItem","active","ScrollspyMenuItem","label","props","ScrollspySeparator","StyledScrollspy","Scrollspy","React","useState","currentSection","setCurrentSection","result","content","extras","Children","forEach","child","type","ScrollspyExtra","push","ScrollspyContent","console","error","length","getComponents","screenSections","useMemo","scrollPosition","useScrollPosition","useEffect","section","index","ystart","map","onClick","scrollTo","slice","ref","offsetTop","scrollIntoView","behavior","addScrollSection","EYE_HEIGHT","CardWrapper","img","x","y","a","CardContent","CardLabel","CardIcon","Card","url","href","target","datatype","CardGroup","StyledTyper","Typer","text","textCarousel","timing","typeStrokes","deleteStrokes","waiting","setContent","intervalId","useRef","initialCopy","carouselCopy","addCarouselWord","carouselIndex","currentText","current","clearInterval","setTimeout","setInterval","deleteCarouselWord","getNextCarouselIndex","intervalUpdater","TileContent","p","large","TileTitle","header","StyledTile","columns","rows","bgcolor","Tile","title","src","image","alt","StyledTileGroup","autoFill","tileSize","TileGroup","bubbleSize","Bubble","themeColors","year","Line","StyledTimeline","Timeline","StyledSection","Section","StyledAnimation","Device","Computer","Tablet","Smartphone","Animation","computer","smartphone","TyperContainer","Intro","gap","height","textWidth","picWidth","width","StyledProfile","LeftColumn","Picture","Skills","Text","K","span","Profile","avatar","projects","description","repoUrl","demoUrl","fluidity","kitty","goAudio","smug","StyledProject","ProjectAvatar","Description","ButtonRow","Project","rel","faGithub","faEye","ProjectsContainer","Projects","timelineProps","project","ressources","awesome","reactHooks","lawsOfUx","startpages","googleFonts","webdev","Ressources","ressource","SocialMedia","useTheme","faGitlab","faNpm","faYoutube","faReddit","faSteam","Avatar","Portfolio","logo","faTerminal","faAddressCard","faGithubAlt","faCoffee","faHashtag","AppWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fb75c9c.chunk.js","sourcesContent":["import { Theme } from '@emotion/react';\n\nconst color = {\n  dark: 'rgb(40,44,52)',\n  light: 'rgb(220,223,228)',\n  grey: 'rgb(171,178,191)',\n\n  red: 'rgb(224,108,117)',\n  green: 'rgb(152,195,121)',\n  yellow: 'rgb(229,192,123)',\n  blue: 'rgb(97,175,239)',\n  purple: 'rgb(198,120,221)',\n  cyan: 'rgb(86,182,194)',\n  orange: 'rgb(255, 187, 124)',\n};\n\nconst space = {\n  xxs: '0.125rem',\n  xs: '0.5rem',\n  sm: '1rem',\n  md: '1.5rem',\n  lg: '2rem',\n  xl: '4rem',\n  xxl: '6rem',\n};\n\nconst border = {\n  light: {\n    sm: space.xxs + ' solid ' + color.light,\n    lg: space.xs + ' solid ' + color.light,\n  },\n  dark: {\n    sm: space.xxs + ' solid ' + color.dark,\n    lg: space.xs + ' solid ' + color.dark,\n  },\n};\n\nconst shadow = {\n  regular: '0 20px 50px rgba(0, 0, 0, 0.8)',\n  small: '0 10px 20px rgba(0, 0, 0, 0.8)',\n};\n\nconst animation = {\n  bouncy: 'cubic-bezier(0.65, -0.85, 0.35, 1.85)',\n};\n\nconst breakpoints = {\n  small: '@media only screen and (max-width: 550px)',\n  mobile: '@media only screen and (max-width: 800px)',\n  tablet: '@media only screen and (max-width: 1050px)',\n  laptop: '@media only screen and (max-width: 1440px)',\n};\n\nexport const getTheme = () =>\n  ({\n    color: color,\n    space: space,\n    border: border,\n    shadow: shadow,\n    animation: animation,\n    breakpoints: breakpoints,\n  } as Theme);\n","import React from 'react';\n\nimport {\n  ThemeProvider as EmotionThemeProvider,\n  Global,\n  css,\n} from '@emotion/react';\n\nimport { getTheme } from './getTheme';\n\nconst { color } = getTheme();\n\nconst globalStyles = css`\n  @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500&display=swap');\n  ::-webkit-scrollbar {\n    width: 15px;\n    height: 15px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: ${color.grey};\n    border-radius: 10px;\n  }\n  body {\n    margin: 0;\n    overflow: overlay;\n    width: 100vw;\n    color: ${color.light};\n  }\n  * {\n    font-family: 'Quicksand';\n    font-weight: 300;\n  }\n\n  a {\n    text-decoration: none;\n    ::visited {\n      color: unset;\n    }\n    color: unset;\n  }\n`;\n\nexport const ThemeProvider = ({\n  children,\n}: React.PropsWithChildren<unknown>) => {\n  return (\n    <>\n      <Global styles={globalStyles} />\n      <EmotionThemeProvider theme={getTheme()}>{children}</EmotionThemeProvider>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {\n  FontAwesomeIcon,\n  FontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome';\n\nconst StyledButton = styled.button`\n  ${({ theme: { color, border, space } }) => css`\n    cursor: pointer;\n    color: ${color.light};\n    background-color: transparent;\n    border: ${border.light.sm};\n    padding: 0 ${space.sm};\n    height: ${space.lg};\n    transition: 0.3s;\n    font-weight: 400;\n    font-size: ${space.sm};\n    :hover,\n    :active,\n    :focus {\n      color: ${color.dark};\n      background-color: ${color.light};\n      outline: none;\n    }\n\n    > svg {\n      margin-left: ${space.xs};\n    }\n  `}\n`;\n\ntype ButtonProps = {\n  icon?: FontAwesomeIconProps['icon'];\n  onClick?: () => void;\n};\n\nexport const Button = ({\n  children,\n  icon,\n  ...buttonProps\n}: React.PropsWithChildren<ButtonProps>) => (\n  <StyledButton {...buttonProps}>\n    {children}\n    {icon && <FontAwesomeIcon icon={icon} />}\n  </StyledButton>\n);\n","import styled from '@emotion/styled';\n\nexport const ScrollspyMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  ${({ theme }) => theme.breakpoints.mobile} {\n    flex-direction: row;\n  }\n`;\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst WIDTH = '8rem';\n\nconst StyledMenuItem = styled.button<{ active: boolean }>`\n  ${({ theme: { color, space, animation, breakpoints }, active }) => css`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n    width: ${WIDTH};\n    height: calc(${space.md} * 2);\n    cursor: pointer;\n    border: none;\n    border-radius: 0;\n    outline: none;\n    overflow-y: hidden;\n\n    background-color: transparent;\n    color: inherit;\n    font-size: ${space.sm};\n    white-space: nowrap;\n\n    > svg,\n    > span {\n      position: absolute;\n      transition: 0.7s ${animation.bouncy};\n    }\n    > svg {\n      top: calc(50% - ${space.sm});\n      font-size: calc(${space.sm} * 1.2);\n    }\n\n    > span {\n      top: -50%;\n    }\n\n    :hover,\n    :focus,\n    :active {\n      > svg {\n        top: 150%;\n      }\n\n      > span {\n        top: calc(50% - ${space.sm});\n      }\n    }\n    ${active &&\n    css`\n      > svg {\n        top: 150%;\n      }\n\n      > span {\n        top: calc(50% - ${space.sm});\n      }\n    `}\n\n    ${breakpoints.mobile} {\n      width: calc(${space.md} * 2);\n      > span {\n        display: none;\n      }\n\n      > svg {\n        transition: 0.3s ${animation.bouncy};\n      }\n\n      :focus,\n      :active {\n        > svg {\n          top: calc(50% - ${space.sm});\n        }\n      }\n      :hover {\n        > svg {\n          color: ${color.red};\n          top: 0;\n        }\n      }\n      ${active &&\n      css`\n        > svg {\n          color: ${color.blue};\n          top: 0;\n        }\n        :focus,\n        :active {\n          > svg {\n            color: ${color.blue};\n            top: 0;\n          }\n        }\n      `}\n    }\n  `}\n`;\n\ntype ScrollspyMenuItemProps = {\n  icon: IconDefinition;\n  label: string;\n  active: boolean;\n  onClick: () => void;\n};\n\nexport const ScrollspyMenuItem = ({\n  icon,\n  label,\n  ...props\n}: ScrollspyMenuItemProps) => (\n  <StyledMenuItem {...props}>\n    <FontAwesomeIcon icon={icon} />\n    <span>{label}</span>\n  </StyledMenuItem>\n);\n","import styled from '@emotion/styled';\n\nexport const ScrollspySeparator = styled.div`\n  flex: auto;\n  border-left: ${({ theme }) => theme.border.light.sm};\n  width: 0;\n  margin: ${({ theme }) => theme.space.md} 0;\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledScrollspy = styled.div`\n  position: fixed;\n  top: 50px;\n  left: 0;\n  bottom: 50px;\n  z-index: 100;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  color: white;\n  mix-blend-mode: difference;\n\n  ${({ theme }) => theme.breakpoints.mobile} {\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 20px 20px 10px 20px;\n    top: 0px;\n    right: 0px;\n    bottom: unset;\n    left: 0px;\n    background-color: ${({ theme }) => theme.color.dark};\n    mix-blend-mode: unset;\n  }\n`;\n","import React from 'react';\n\nimport useScrollPosition from '@react-hook/window-scroll';\n\nimport { ScrollspyMenu } from './fragments/ScrollspyMenu';\nimport { ScrollspyMenuItem } from './fragments/ScrollspyMenuItem';\nimport { ScrollspySeparator } from './fragments/ScrollspySeparator';\nimport { StyledScrollspy } from './fragments/StyledScrollspy';\nimport { getComponents } from './utils/getComponents';\n\ntype ScreenSection = {\n  ystart: number;\n  scrollTo: () => void;\n};\n\ntype ScrollspyProps = { children: React.ReactElement[] };\n\nexport const Scrollspy = ({ children }: ScrollspyProps) => {\n  const [currentSection, setCurrentSection] = React.useState<number>(0);\n  const { extras, content } = getComponents(children);\n  const screenSections: ScreenSection[] = React.useMemo(() => [], []);\n  const scrollPosition = useScrollPosition();\n\n  React.useEffect(() => {\n    screenSections.forEach((section, index) => {\n      if (section.ystart <= scrollPosition) setCurrentSection(index);\n    });\n  }, [scrollPosition, screenSections]);\n\n  const addScrollSection = (ref: HTMLDivElement | null, index: number) => {\n    if (!screenSections[index]) {\n      screenSections[index] = {\n        ystart: ref?.offsetTop ?? 0,\n        scrollTo: () => {\n          ref?.scrollIntoView({ behavior: 'smooth' });\n          setCurrentSection(index);\n        },\n      };\n    }\n  };\n\n  return (\n    <>\n      <StyledScrollspy>\n        {extras[0]}\n        <ScrollspySeparator />\n\n        <ScrollspyMenu>\n          {content.map((child, index) => (\n            <ScrollspyMenuItem\n              onClick={() => screenSections[index]?.scrollTo()}\n              active={currentSection === index}\n              icon={child.icon}\n              label={child.label}\n              key={'spyitem' + index}\n            />\n          ))}\n        </ScrollspyMenu>\n\n        <ScrollspySeparator />\n        {extras.slice(1)}\n      </StyledScrollspy>\n\n      {content.map((child, index) => (\n        <div\n          key={'scrollsection' + index}\n          ref={(ref) => addScrollSection(ref, index)}\n        >\n          {child.children}\n        </div>\n      ))}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { ScrollspyExtra, ScrollspyContent } from '../';\nimport { ScrollspyContentProps } from '../ScrollspyContent';\n\ntype ContentElements = React.PropsWithChildren<ScrollspyContentProps>;\n\nexport type Components = {\n  extras: React.ReactElement[];\n  content: ContentElements[];\n};\n\nexport function getComponents(children: React.ReactElement[]): Components {\n  const result: Components = { content: [], extras: [] };\n  if (children) {\n    React.Children.forEach(children, (child) => {\n      switch (child.type) {\n        case ScrollspyExtra:\n          result.extras.push(child);\n          break;\n        case ScrollspyContent:\n          result.content.push(child.props);\n          break;\n        default:\n          console.error(\n            `An incompatible component was passed to the scrollspy, it won't be displayed.`\n          );\n      }\n    });\n  }\n  if (result.content.length === 0)\n    console.error(`You didnt pass any content to the scrollspy.`);\n\n  return result;\n}\n","import React from 'react';\n\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport type ScrollspyContentProps = {\n  icon: IconDefinition;\n  label: string;\n};\n\nexport const ScrollspyContent = ({\n  children,\n}: React.PropsWithChildren<ScrollspyContentProps>) => <div>{children}</div>;\n","import styled from '@emotion/styled';\n\nexport const ScrollspyExtra = styled.div`\n  ${({ theme }) => theme.breakpoints.mobile} {\n    display: none;\n  }\n`;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport useMousePosition from '@react-hook/mouse-position';\n\nimport iris from './eye/iris.svg';\nimport pupil from './eye/pupil.svg';\nimport sclera from './eye/sclera.svg';\n\nconst EYE_HEIGHT = 200;\nconst EYE_WIDTH = 286;\nconst X_BOUNDARY = EYE_HEIGHT / 2.2;\nconst Y_BOUNDARY = EYE_HEIGHT / 4.2;\n\nconst StalkerWrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Sclera = styled.img`\n  position: relative;\n  height: ${EYE_HEIGHT}px;\n  width: ${EYE_WIDTH}px;\n  z-index: 5;\n`;\n\nconst Iris = styled.img<{ x: number; y: number }>`\n  height: ${EYE_HEIGHT}px;\n  position: absolute;\n  left: ${({ x }) => x}px;\n  top: ${({ y }) => y}px;\n\n  transition: 0.1s;\n`;\n\nconst Pupil = styled.img<{ x: number; y: number }>`\n  height: ${EYE_HEIGHT}px;\n  position: absolute;\n  left: ${({ x }) => x}px;\n  top: ${({ y }) => y}px;\n\n  transition: 0.1s;\n`;\n\nexport const Stalker = () => {\n  const mousePosition = useMousePosition(document.getElementById('root'));\n  const screenBoundary = { x: window.innerWidth, y: window.innerHeight };\n  const eyeRef = React.useRef<HTMLDivElement | null>(null);\n\n  const getXAxis = () => {\n    if (!mousePosition.pageX) return 0;\n    if (!eyeRef.current) return 0;\n\n    const wrapperPosition =\n      eyeRef.current.getBoundingClientRect().x + window.pageXOffset;\n\n    const result =\n      (mousePosition.pageX - wrapperPosition - EYE_WIDTH / 2) /\n      (screenBoundary.x / EYE_HEIGHT);\n    if (result > X_BOUNDARY) return X_BOUNDARY;\n    if (result < -X_BOUNDARY) return -X_BOUNDARY;\n    return result;\n  };\n\n  const getYAxis = () => {\n    if (!mousePosition.pageY) return 0;\n    if (!eyeRef.current) return 0;\n\n    const wrapperPosition =\n      eyeRef.current.getBoundingClientRect().y + window.pageYOffset;\n\n    const result =\n      (mousePosition.pageY - wrapperPosition - EYE_HEIGHT / 2) /\n      (screenBoundary.y / EYE_HEIGHT);\n    if (result > Y_BOUNDARY) return Y_BOUNDARY;\n    if (result < -Y_BOUNDARY) return -Y_BOUNDARY;\n    return result;\n  };\n\n  return (\n    <StalkerWrapper ref={eyeRef}>\n      <Sclera src={sclera} />\n      <Iris src={iris} x={getXAxis()} y={getYAxis()} />\n      <Pupil\n        src={pupil}\n        x={getXAxis() + getXAxis() / 5}\n        y={getYAxis() + getYAxis() / 4}\n      />\n    </StalkerWrapper>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/iris.dfd01b58.svg\";","export default __webpack_public_path__ + \"static/media/pupil.39b2ec41.svg\";","export default __webpack_public_path__ + \"static/media/sclera.93060283.svg\";","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst CardWrapper = styled.a<{ color: string }>`\n  ${({ theme: { shadow }, color }) => css`\n    position: relative;\n    width: 14.14rem;\n    height: 10rem;\n    background-color: ${color};\n    box-shadow: ${shadow.regular};\n    float: left;\n    margin: 20px;\n    overflow: hidden;\n\n    ::before,\n    ::after {\n      content: '';\n      position: absolute;\n      right: 0;\n      left: 0;\n      z-index: 1;\n\n      background-color: black;\n      transition: 0.4s ease;\n    }\n    ::before {\n      top: 0;\n      bottom: 0;\n      opacity: 0.6;\n    }\n\n    ::after {\n      top: 10rem;\n      bottom: 0;\n      opacity: 0.4;\n    }\n    [datatype='text'] {\n    }\n\n    :hover,\n    :active,\n    :focus {\n      outline: none;\n      ::before {\n        bottom: 10rem;\n      }\n      ::after {\n        top: 0;\n      }\n      [datatype='icon'] {\n        bottom: 10rem;\n        top: -10rem;\n      }\n      [datatype='text'] {\n        top: 0;\n      }\n    }\n  `}\n`;\n\nconst CardContent = styled.div`\n  color: ${({ theme }) => theme.color.light};\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 10;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.4s ease;\n`;\n\nconst CardLabel = styled(CardContent)`\n  top: 10rem;\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.space.md};\n`;\n\nconst CardIcon = styled(CardContent)`\n  top: 0;\n  right: 0;\n  font-size: ${({ theme }) => theme.space.xl};\n`;\n\ntype CardProps = {\n  url: string;\n  icon: IconDefinition;\n  color: string;\n};\n\nexport const Card = ({\n  url,\n  children,\n  icon,\n  color,\n}: React.PropsWithChildren<CardProps>) => {\n  return (\n    <CardWrapper href={url} target={'_blank'} color={color}>\n      <CardIcon datatype={'icon'}>\n        <FontAwesomeIcon icon={icon} />\n      </CardIcon>\n      <CardLabel datatype={'text'}>{children}</CardLabel>\n    </CardWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CardGroup = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  ${({ theme }) => theme.breakpoints.tablet} {\n    grid-template-columns: auto auto;\n  }\n  ${({ theme }) => theme.breakpoints.small} {\n    grid-template-columns: auto;\n  }\n`;\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst StyledTyper = styled.div`\n  ${({ theme: { color, space } }) => css`\n    width: 100%;\n    box-sizing: border-box;\n    white-space: break-spaces;\n\n    ::after {\n      content: '';\n      height: ${space.xxs};\n      width: ${space.md};\n      margin-left: ${space.xs};\n      display: inline-block;\n      background-color: ${color.light};\n      animation: blink 0.7s infinite;\n      transition: 0.5s;\n    }\n\n    @keyframes blink {\n      0% {\n        opacity: 1;\n      }\n      25% {\n        opacity: 1;\n      }\n      75% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 0;\n      }\n    }\n  `}\n`;\n\ntype TyperProps = {\n  text: string;\n  textCarousel?: string[];\n  timing: {\n    typeStrokes: number;\n    deleteStrokes: number;\n    waiting: number;\n  };\n};\n\nexport const Typer = ({\n  text,\n  textCarousel,\n  timing: { typeStrokes, deleteStrokes, waiting },\n}: TyperProps) => {\n  const [content, setContent] = React.useState('');\n  const intervalId = React.useRef<NodeJS.Timeout>();\n  let initialCopy = '';\n  let carouselCopy = '';\n\n  const addCarouselWord = (carouselIndex: number) => {\n    if (textCarousel) {\n      const currentText = textCarousel[carouselIndex];\n      if (currentText) {\n        carouselCopy += currentText[carouselCopy.length];\n        setContent(initialCopy + carouselCopy);\n        if (intervalId.current && carouselCopy.length >= currentText.length) {\n          clearInterval(intervalId.current);\n          setTimeout(\n            () =>\n              (intervalId.current = setInterval(\n                () => deleteCarouselWord(carouselIndex),\n                deleteStrokes\n              )),\n            waiting\n          );\n        }\n      }\n    }\n  };\n\n  const deleteCarouselWord = (carouselIndex: number) => {\n    if (textCarousel) {\n      const currentText = textCarousel[carouselIndex];\n      if (currentText) {\n        carouselCopy = carouselCopy.slice(0, carouselCopy.length - 1);\n        setContent(initialCopy + carouselCopy);\n        if (intervalId.current && carouselCopy.length === 0) {\n          clearInterval(intervalId.current);\n          intervalId.current = setInterval(\n            () => addCarouselWord(getNextCarouselIndex(carouselIndex)),\n            typeStrokes\n          );\n        }\n      }\n    }\n  };\n\n  const getNextCarouselIndex = (index: number) => {\n    if (textCarousel && index >= textCarousel.length - 1) return 0;\n    return index + 1;\n  };\n\n  const intervalUpdater = () => {\n    initialCopy += text[initialCopy.length];\n    setContent(initialCopy);\n    if (intervalId.current && initialCopy.length === text.length) {\n      clearInterval(intervalId.current);\n      if (textCarousel)\n        intervalId.current = setInterval(() => addCarouselWord(0), typeStrokes);\n    }\n  };\n\n  React.useEffect(() => {\n    intervalId.current = setInterval(intervalUpdater, typeStrokes);\n  }, []);\n\n  return <StyledTyper>{content}</StyledTyper>;\n};\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const TileContent = styled.p<{ large: boolean }>`\n  ${({ theme: { space }, large }) => css`\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: calc(${space.lg} + ${space.md}) ${space.md} ${space.md};\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n\n    font-weight: 400;\n    font-size: ${large ? space.md : space.sm};\n  `}\n`;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nexport const TileTitle = styled.header`\n  ${({ theme: { color, space } }) => css`\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: ${space.lg};\n    padding-left: ${space.xs};\n    z-index: 1;\n    display: flex;\n    align-items: center;\n\n    font-weight: 500;\n    background-color: ${color.dark};\n    opacity: 0.9;\n  `}\n`;\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { TileContent } from './fragments/TileContent';\nimport { TileTitle } from './fragments/TileTitle';\n\ntype StyledTileProps = {\n  href: string;\n  bgcolor?: string;\n  columns?: number;\n  rows?: number;\n};\n\nexport const StyledTile = styled.a<StyledTileProps>`\n  ${({\n    theme: { color, space, animation },\n    columns = 1,\n    rows = 1,\n    bgcolor = color.dark,\n  }) => css`\n    position: relative;\n    grid-column: span ${columns};\n    grid-row: span ${rows};\n    position: relative;\n    overflow: hidden;\n\n    background-color: ${bgcolor};\n\n    > article {\n      position: relative;\n      height: 100%;\n      width: 100%;\n      top: calc(100% - ${space.lg});\n      z-index: 1;\n    }\n\n    > img {\n      position: absolute;\n      bottom: 0;\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n    }\n\n    ::before,\n    ::after {\n      content: '';\n      position: absolute;\n      height: 150%;\n      width: 100%;\n      background-color: ${color.dark};\n    }\n    ::before {\n      bottom: 0;\n      opacity: 0.6;\n    }\n    ::after {\n      top: 100%;\n      opacity: 0.4;\n    }\n\n    *,\n    ::before,\n    ::after {\n      transition: 0.5s;\n    }\n\n    :hover {\n      > article,\n      ::after {\n        top: 0;\n      }\n      > img,\n      ::before {\n        bottom: 100%;\n      }\n    }\n  `}\n`;\n\ntype TileProps = StyledTileProps & {\n  title: string;\n  content?: string;\n  image: string;\n};\n\nexport const Tile = ({ title, content, ...props }: TileProps) => (\n  <StyledTile {...props}>\n    <article>\n      <TileTitle>{title}</TileTitle>\n      <TileContent large={!!props.columns || !!props.rows}>\n        {content}\n      </TileContent>\n    </article>\n    <img src={props.image} alt={''} />\n  </StyledTile>\n);\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\ntype TileGroupProps = {\n  children: React.ReactElement[];\n  tileSize?: string;\n  autoFill?: boolean;\n};\n\nconst StyledTileGroup = styled.div<TileGroupProps>`\n  ${({\n    theme: { space, breakpoints, shadow },\n    autoFill,\n    tileSize = '10rem',\n  }) => css`\n    display: grid;\n    grid-template-columns: repeat(6, ${tileSize});\n    grid-auto-rows: ${tileSize};\n    grid-auto-flow: ${autoFill ? 'dense' : 'row'};\n    grid-gap: ${space.xs};\n\n    filter: drop-shadow(${shadow.small});\n\n    ${breakpoints.laptop} {\n      grid-template-columns: repeat(3, ${tileSize});\n    }\n    ${breakpoints.mobile} {\n      grid-template-columns: repeat(2, ${tileSize});\n    }\n    ${breakpoints.small} {\n      grid-template-columns: repeat(1, ${tileSize});\n    }\n  `}\n`;\n\nexport const TileGroup = ({ ...props }: TileGroupProps) => {\n  return <StyledTileGroup {...props} />;\n};\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst bubbleSize = 70;\n\nconst Bubble = styled.div<TimelineProps>`\n  ${({ theme: { color: themeColors, shadow }, color, year }) => css`\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    right: -100px;\n    top: 0;\n    height: ${bubbleSize}px;\n    width: ${bubbleSize}px;\n    border-radius: ${bubbleSize / 2}px;\n    background-color: ${color};\n    box-shadow: ${shadow.small};\n    ::before {\n      content: '${year}';\n      color: ${themeColors.dark};\n      font-weight: 600;\n    }\n  `}\n`;\nconst Line = styled.div<Pick<TimelineProps, 'color'>>`\n  ${({ theme: { shadow }, color }) => css`\n    position: absolute;\n    top: ${bubbleSize}px;\n    right: -${102 - bubbleSize / 2}px;\n    height: calc(100% - ${bubbleSize}px);\n    background-color: ${color};\n    width: 4px;\n    box-shadow: ${shadow.small};\n  `}\n`;\nconst StyledTimeline = styled.div`\n  ${({ theme: { space } }) => css`\n    position: relative;\n    margin-bottom: ${space.md};\n    padding-top: ${bubbleSize / 2}px;\n  `}\n`;\n\ntype TimelineProps = {\n  year: number;\n  color: string;\n};\nexport const Timeline = ({\n  year,\n  color,\n  children,\n}: React.PropsWithChildren<TimelineProps>) => (\n  <StyledTimeline>\n    <Bubble color={color} year={year} />\n    <Line color={color} />\n    {children}\n  </StyledTimeline>\n);\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport Reveal from 'react-reveal/Reveal';\n\nconst StyledSection = styled.section<{ bgcolor?: string }>`\n  ${({ theme: { color, breakpoints }, bgcolor = color.dark }) => css`\n    width: 100vw;\n    min-height: 100vh;\n    position: relative;\n    background-color: ${bgcolor};\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    padding: 150px;\n    box-sizing: border-box;\n\n    ${breakpoints.mobile} {\n      padding-left: 20px;\n      padding-right: 20px;\n    }\n\n    > .fadeIn {\n      animation-name: fadeIn;\n\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n          transform: translate3d(0, 20%, 0);\n        }\n        to {\n          opacity: 1;\n          transform: translateZ(0);\n        }\n      }\n    }\n  `}\n`;\n\ntype SectionProps = {\n  bgcolor?: string;\n};\n\nexport const Section = ({\n  children,\n  ...props\n}: React.PropsWithChildren<SectionProps>) => {\n  return <StyledSection {...props}>{children}</StyledSection>;\n};\n","export default __webpack_public_path__ + \"static/media/logo.9ce72a06.svg\";","export default __webpack_public_path__ + \"static/media/computer.ba55b973.svg\";","export default __webpack_public_path__ + \"static/media/smartphone.e18b1faa.svg\";","export default __webpack_public_path__ + \"static/media/tablet.97fe932b.svg\";","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport computer from '../data/media/computer.svg';\nimport smartphone from '../data/media/smartphone.svg';\nimport tablet from '../data/media/tablet.svg';\n\nconst StyledAnimation = styled.div`\n  ${({ theme: { breakpoints } }) => css`\n    display: grid;\n    grid-gap: 40px;\n    grid-template-columns: auto auto auto;\n    align-items: flex-end;\n    margin-bottom: 50px;\n\n    @keyframes jump {\n      15% {\n        transform: translateY(-50px);\n      }\n      30%,\n      100% {\n        transform: translateY(0px);\n      }\n    }\n\n    ${breakpoints.tablet} {\n      position: relative;\n      display: block;\n      height: 250px;\n      > img {\n        position: absolute;\n      }\n      @keyframes jump {\n        15% {\n          transform: translateY(-20px);\n        }\n        30%,\n        100% {\n          transform: translateY(0px);\n        }\n      }\n    }\n  `}\n`;\n\nconst Device = styled.img`\n  ${({ theme: { animation, shadow } }) => css`\n    animation: jump 3s ${animation.bouncy} infinite;\n    filter: drop-shadow(${shadow.small});\n  `}\n`;\n\nconst Computer = styled(Device)`\n  ${({ theme: { breakpoints } }) => css`\n    width: 500px;\n\n    ${breakpoints.tablet} {\n      left: -300px;\n      bottom: 10px;\n    }\n    ${breakpoints.mobile} {\n      width: 333px;\n      left: -200px;\n      bottom: 10px;\n    }\n    ${breakpoints.small} {\n      left: -166px;\n    }\n  `}\n`;\n\nconst Tablet = styled(Device)`\n  ${({ theme: { breakpoints } }) => css`\n    width: 150px;\n    animation-delay: 0.5s;\n    ${breakpoints.tablet} {\n      left: 100px;\n      bottom: 0;\n    }\n    ${breakpoints.mobile} {\n      width: 100px;\n      left: 70px;\n      bottom: 0;\n    }\n    ${breakpoints.small} {\n      left: 0px;\n    }\n  `}\n`;\n\nconst Smartphone = styled(Device)`\n  ${({ theme: { breakpoints } }) => css`\n    width: 70px;\n    animation-delay: 1s;\n\n    ${breakpoints.tablet} {\n      left: 220px;\n      bottom: -10px;\n    }\n    ${breakpoints.mobile} {\n      width: 46px;\n      left: 150px;\n      bottom: -10px;\n    }\n    ${breakpoints.small} {\n      left: 70px;\n    }\n  `}\n`;\n\nexport const Animation = () => {\n  return (\n    <StyledAnimation>\n      <Computer src={computer} />\n      <Tablet src={tablet} />\n      <Smartphone src={smartphone} />\n    </StyledAnimation>\n  );\n};\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { Typer } from '../components';\nimport { Animation } from './Animation';\n\nconst TyperContainer = styled.div`\n  width: 500px;\n  font-size: ${({ theme }) => theme.space.xl};\n  ${({ theme }) => theme.breakpoints.small} {\n    width: auto;\n    font-size: 2.5rem;\n    margin: 0 auto;\n  }\n  margin: 0 auto;\n`;\n\nexport const Intro = () => (\n  <>\n    <Animation />\n    <TyperContainer>\n      <Typer\n        text={`Welcome to my \\n`}\n        textCarousel={[\n          'portfolio',\n          'passion',\n          'hobby',\n          'project',\n          'playground',\n        ]}\n        timing={{ typeStrokes: 100, deleteStrokes: 50, waiting: 2000 }}\n      />\n    </TyperContainer>\n  </>\n);\n","export default __webpack_public_path__ + \"static/media/avatar.fa89cc50.png\";","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport avatar from '../data/media/avatar.png';\n\nconst gap = 40;\nconst width = 800;\nconst height = width / 1.618;\nconst textWidth = height - gap * 2;\nconst picWidth = width - textWidth - gap * 3;\n\nconst StyledProfile = styled.div`\n  ${({ theme: { color, breakpoints, shadow } }) => css`\n    box-sizing: border-box;\n    width: ${width}px;\n    min-height: ${height}px;\n\n    display: flex;\n\n    background-color: ${color.dark};\n    box-shadow: ${shadow.regular};\n    padding: ${gap}px;\n\n    display: grid;\n    grid-template-columns: ${picWidth}px ${textWidth}px;\n    grid-gap: ${gap}px;\n\n    ${breakpoints.tablet} {\n      grid-template-columns: auto;\n      width: 100%;\n    }\n  `}\n`;\n\nconst LeftColumn = styled.div`\n  ${({ theme: { breakpoints } }) => css`\n    ${breakpoints.tablet} {\n      display: grid;\n      grid-template-columns: auto 1fr;\n      grid-gap: ${gap}px;\n      > div {\n        margin: auto 0;\n      }\n    }\n    @media only screen and (max-width: 850px) {\n      grid-template-columns: auto;\n      > img {\n        justify-self: center;\n      }\n    }\n  `}\n`;\n\nconst Picture = styled.img`\n  ${({ theme: { color, shadow } }) => css`\n    width: ${picWidth}px;\n    height: ${picWidth}px;\n    border: 4px solid ${color.light};\n    padding: 20px;\n    object-fit: contain;\n    box-sizing: border-box;\n    box-shadow: ${shadow.regular};\n  `}\n`;\n\nconst Skills = styled.div`\n  ${({ theme: { space } }) => css`\n    margin-top: ${gap}px;\n    font-weight: 400;\n    line-height: ${space.md};\n  `}\n`;\n\nconst Text = styled.div`\n  ${({ theme: { color, space, breakpoints } }) => css`\n    width: ${textWidth}px;\n    color: ${color.light};\n    font-size: ${space.md};\n    text-align: justify;\n    > p {\n      margin: 0;\n    }\n    > h2 {\n      font-size: ${space.lg};\n      margin-top: 0;\n      margin-bottom: ${space.sm};\n    }\n\n    ${breakpoints.tablet} {\n      width: 100%;\n    }\n  `}\n`;\n\nconst K = styled.span`\n  ${({ theme: { color } }) =>\n    css`\n      color: ${color.red !== color.dark ? color.red : color.light};\n    `};\n`;\n\nexport const Profile = () => (\n  <StyledProfile>\n    <LeftColumn>\n      <Picture src={avatar} />\n      <Skills>\n        B Sc Informatics\n        <br />\n        German | English\n        <br />\n        <K>Skills:</K> CSS, TypeScript, React\n        <br />\n        <K>Learning:</K> Hooks, Redux, Animation\n      </Skills>\n    </LeftColumn>\n    <Text>\n      <h2>About Me</h2>\n      <p>\n        I am a 25 year old professional <K>web developer</K> which acquired his{' '}\n        informatics degree in 2021 and is employed since then as a web\n        developer.\n        <br />\n        <br />\n        Most of the time I develop <K>frontend</K> apps with <K>React</K> and{' '}\n        <K>Typescript</K>, try to <K>design</K> my own stuff and build cool web\n        apps while learning new things.\n      </p>\n    </Text>\n  </StyledProfile>\n);\n","export default __webpack_public_path__ + \"static/media/fluidity.c2fec930.svg\";","export default __webpack_public_path__ + \"static/media/go-audio.76d6a55b.png\";","export default __webpack_public_path__ + \"static/media/kitty.4387a5b9.png\";","export default __webpack_public_path__ + \"static/media/smug.9792ee4a.jpg\";","import { getTheme } from '../components';\nimport avatar from './media/avatar.png';\nimport fluidity from './media/fluidity.svg';\nimport goAudio from './media/go-audio.png';\nimport kitty from './media/kitty.png';\nimport smug from './media/smug.jpg';\n\nconst { color } = getTheme();\n\nexport type Project = {\n  title: string;\n  description: string;\n  image: string;\n  repoUrl: string;\n  demoUrl?: string;\n};\n\ntype Year = { year: number; color: string; projects: Project[] };\n\nexport const projects: Year[] = [\n  {\n    year: 2021,\n    color: color.red,\n    projects: [\n      {\n        title: 'Portfolio v3',\n        description:\n          'The latest version of my portfolio. You are currently looking at it.',\n        image: avatar,\n        repoUrl: 'https://github.com/PrettyCoffee/PrettyCoffee.github.io',\n        demoUrl: 'https://prettycoffee.github.io/',\n      },\n      {\n        title: 'Fluidity',\n        description:\n          'My third browser startpage featuring a unique design and many options for customizability such as appearance, bookmarks and keyword forwarding.',\n        image: fluidity,\n        repoUrl: 'https://github.com/PrettyCoffee/fluidity',\n        demoUrl: 'https://prettycoffee.github.io/fluidity/',\n      },\n    ],\n  },\n  {\n    year: 2020,\n    color: color.purple,\n    projects: [\n      {\n        title: 'B/W Kitty',\n        description:\n          'My second browser startpage, featuring bookmarks, a searchbar and color theming.',\n        image: kitty,\n        repoUrl: 'https://github.com/PrettyCoffee/b-w-kitty',\n        demoUrl: 'https://prettycoffee.github.io/b-w-kitty/',\n      },\n      {\n        title: 'Raspberry Pi Audio-API',\n        description:\n          'A go library which allows to programmatically time and mix the playback of sound files.',\n        image: goAudio,\n        repoUrl: 'https://gitlab.com/PrettyCoffee/raspberry-pi-audio-api',\n      },\n    ],\n  },\n  {\n    year: 2019,\n    color: color.blue,\n    projects: [\n      {\n        title: 'smugLoader',\n        description: 'A browser startpage based on the \"smug dancin\" meme.',\n        image: smug,\n        repoUrl: 'https://gitlab.com/PrettyCoffee/smugloader',\n      },\n    ],\n  },\n];\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faEye } from '@fortawesome/free-regular-svg-icons';\n\nimport { Button } from '../../components';\nimport { Project as ProjectProps } from '../../data/projects';\n\nconst StyledProject = styled.div`\n  ${({ theme: { breakpoints } }) => css`\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-gap: 40px;\n    margin-bottom: 40px;\n    ${breakpoints.mobile} {\n      grid-template-columns: auto;\n      width: calc(100vw - 40px);\n      position: relative;\n    }\n  `}\n`;\n\nconst ProjectAvatar = styled.img`\n  ${({ theme: { color, shadow, breakpoints, space } }) => css`\n    height: 200px;\n    width: 200px;\n    border: 4px solid ${color.light};\n    padding: 20px;\n    object-fit: contain;\n    box-sizing: border-box;\n    box-shadow: ${shadow.small};\n    background-color: ${color.dark};\n    ${breakpoints.mobile} {\n      justify-self: center;\n      margin-top: ${space.xl};\n    }\n  `}\n`;\n\nconst Description = styled.div`\n  ${({ theme: { space, shadow, color } }) => css`\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    padding: 20px;\n    box-shadow: ${shadow.small};\n    background-color: ${color.dark};\n    > h3 {\n      margin: 0 0 ${space.xs} 0;\n      font-weight: 500;\n    }\n  `}\n`;\nconst ButtonRow = styled.div`\n  ${({ theme: { space } }) => css`\n    text-align: right;\n    > a:nth-child(2) {\n      margin-left: ${space.sm};\n    }\n  `}\n`;\n\nexport const Project = ({\n  title,\n  description,\n  demoUrl,\n  repoUrl,\n  image,\n}: ProjectProps) => (\n  <StyledProject>\n    <ProjectAvatar src={image} />\n    <Description>\n      <h3>{title}</h3>\n      <p>{description}</p>\n      <ButtonRow>\n        {repoUrl && (\n          <a href={repoUrl} target=\"_blank\" rel=\"noreferrer\">\n            <Button icon={faGithub}>Repo</Button>\n          </a>\n        )}\n        {demoUrl && (\n          <a href={demoUrl} target=\"_blank\" rel=\"noreferrer\">\n            <Button icon={faEye}>Demo</Button>\n          </a>\n        )}\n      </ButtonRow>\n    </Description>\n  </StyledProject>\n);\n","import React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Timeline } from '../../components';\nimport { projects } from '../../data/projects';\nimport { Project } from './Project';\n\nconst ProjectsContainer = styled.div`\n  ${({ theme: { breakpoints } }) => css`\n    width: 100%;\n    max-width: 800px;\n    ${breakpoints.mobile} {\n      align-self: flex-start;\n      width: calc(100% - 110px);\n    }\n  `}\n`;\n\nexport const Projects = () => (\n  <ProjectsContainer>\n    {projects.map(({ projects, ...timelineProps }) => (\n      <Timeline key={timelineProps.year} {...timelineProps}>\n        {projects.map((project) => (\n          <Project key={project.title} {...project} />\n        ))}\n      </Timeline>\n    ))}\n  </ProjectsContainer>\n);\n","export default __webpack_public_path__ + \"static/media/awesome.464f8c12.svg\";","export default __webpack_public_path__ + \"static/media/google-fonts.eabadd2f.svg\";","export default __webpack_public_path__ + \"static/media/laws-of-ux.a68aef8e.svg\";","export default __webpack_public_path__ + \"static/media/react-hooks.3559b92f.svg\";","export default __webpack_public_path__ + \"static/media/startpages.464e93a8.svg\";","export default __webpack_public_path__ + \"static/media/webdev.c8cd2718.png\";","import { getTheme } from '../components/';\nimport awesome from './media/awesome.svg';\nimport googleFonts from './media/google-fonts.svg';\nimport lawsOfUx from './media/laws-of-ux.svg';\nimport reactHooks from './media/react-hooks.svg';\nimport startpages from './media/startpages.svg';\nimport webdev from './media/webdev.png';\n\nconst { color } = getTheme();\n\ntype Ressource = {\n  title: string;\n  content: string;\n  href: string;\n  image: string;\n  columns?: number;\n  rows?: number;\n  bgcolor?: string;\n};\n\n/*\n _______________\n< /r/startpages >\n ---------------\n  \\\n  \\ ^__^\n    (oo)\\________\n    (__)\\        )\\/\\\n        ||----W ||\n        ||      ||\n*/\n\nexport const ressources: Ressource[] = [\n  {\n    title: 'Awsm React Comps',\n    content:\n      'Awesome React Components is... a list of awesome react components.',\n    href: 'https://github.com/brillout/awesome-react-components/',\n    image: awesome,\n    bgcolor: color.blue,\n  },\n  {\n    title: 'Awsm React Hooks',\n    content: \"It's a list too. But about awesome react hooks.\",\n    href: 'https://github.com/rehooks/awesome-react-hooks',\n    image: reactHooks,\n    bgcolor: color.green,\n  },\n  {\n    title: 'Laws of UX',\n    content:\n      'A collection of best practices that designers can consider when building user interfaces.',\n    href: 'https://lawsofux.com/',\n    image: lawsOfUx,\n    bgcolor: color.purple,\n  },\n  {\n    title: 'r/startpages',\n    content:\n      ' A subreddit about displaying and discussing custom browser startpages.',\n    href: 'https://www.reddit.com/r/startpages/',\n    image: startpages,\n    bgcolor: color.red,\n  },\n  {\n    title: 'Google Fonts',\n    content: 'Fonts - ez mode.',\n    href: 'https://fonts.google.com/',\n    image: googleFonts,\n    bgcolor: color.orange,\n  },\n  {\n    title: 'web.dev/measure',\n    content:\n      'See how well your website performs. Then, get tips to improve your user experience.',\n    href: 'https://web.dev/measure/',\n    image: webdev,\n    bgcolor: color.cyan,\n  },\n];\n","import React from 'react';\n\nimport { Tile, TileGroup } from '../components';\nimport { ressources } from '../data/ressources';\n\nexport const Ressources = () => (\n  <TileGroup autoFill={true} tileSize={'11.5rem'}>\n    {ressources.map((ressource, index) => (\n      <Tile key={'ressource-' + index} {...ressource} />\n    ))}\n  </TileGroup>\n);\n","import React from 'react';\n\nimport { useTheme } from '@emotion/react';\nimport {\n  faYoutube,\n  faGithub,\n  faGitlab,\n  faReddit,\n  faNpm,\n  faSteam,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport { Card, CardGroup } from '../components';\n\nexport const SocialMedia = () => {\n  const { color } = useTheme();\n  return (\n    <CardGroup>\n      <Card\n        url={'https://github.com/PrettyCoffee'}\n        icon={faGithub}\n        color={color.dark}\n      >\n        PrettyCoffee\n      </Card>\n      <Card\n        url={'https://gitlab.com/PrettyCoffee'}\n        icon={faGitlab}\n        color={color.purple}\n      >\n        PrettyCoffee\n      </Card>\n      <Card\n        url={'https://www.npmjs.com/~prettycoffee'}\n        icon={faNpm}\n        color={color.green}\n      >\n        ~prettycoffee\n      </Card>\n      <Card\n        url={'https://www.youtube.com/channel/UCtQqZ6EhvprvC0H2tLN2EcA'}\n        icon={faYoutube}\n        color={color.red}\n      >\n        PrettyCoffee\n      </Card>\n      <Card\n        url={'https://www.reddit.com/user/SpinatMixxer'}\n        icon={faReddit}\n        color={color.orange}\n      >\n        u/SpinatMixxer\n      </Card>\n      <Card\n        url={'https://steamcommunity.com/id/PrettyCoffee/'}\n        icon={faSteam}\n        color={color.blue}\n      >\n        PrettyCoffee\n      </Card>\n    </CardGroup>\n  );\n};\n","import React from 'react';\n\nimport { css, useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faTerminal,\n  faCoffee,\n  faAddressCard,\n  faHashtag,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Scrollspy,\n  ScrollspyExtra,\n  ScrollspyContent,\n  Section,\n  Button,\n} from '../components';\nimport logo from '../data/media/logo.svg';\nimport { Intro } from './Intro';\nimport { Profile } from './Profile';\nimport { Projects } from './Projects/Projects';\nimport { Ressources } from './Ressources';\nimport { SocialMedia } from './SocialMedia';\n\nconst Avatar = styled.div`\n  ${({ theme: { border } }) => css`\n    width: 50px;\n    height: 50px;\n    padding: 5px;\n    border: ${border.light.sm};\n    > img {\n      width: 100%;\n      height: 100%;\n      mix-blend-mode: normal;\n    }\n  `}\n`;\n\nexport const Portfolio = () => {\n  const { color } = useTheme();\n\n  return (\n    <Scrollspy>\n      <ScrollspyExtra>\n        <Avatar>\n          <img src={logo} alt={'avatar'} />\n        </Avatar>\n      </ScrollspyExtra>\n\n      <ScrollspyContent icon={faTerminal} label={'intro'}>\n        <Section bgcolor={color.dark}>\n          <Intro />\n        </Section>\n      </ScrollspyContent>\n\n      <ScrollspyContent icon={faAddressCard} label={'about me'}>\n        <Section bgcolor={color.light}>\n          <Profile />\n        </Section>\n      </ScrollspyContent>\n\n      <ScrollspyContent icon={faGithubAlt} label={'projects'}>\n        <Section bgcolor={color.dark}>\n          <Projects />\n        </Section>\n      </ScrollspyContent>\n\n      <ScrollspyContent icon={faCoffee} label={'ressources'}>\n        <Section bgcolor={color.light}>\n          <Ressources />\n        </Section>\n      </ScrollspyContent>\n\n      <ScrollspyContent icon={faHashtag} label={'social'}>\n        <Section bgcolor={color.dark}>\n          <SocialMedia />\n        </Section>\n      </ScrollspyContent>\n\n      <ScrollspyExtra>\n        <Button>Blub</Button>\n      </ScrollspyExtra>\n    </Scrollspy>\n  );\n};\n","import React from 'react';\n\nimport styled from '@emotion/styled';\n\nimport { ThemeProvider } from './components/Theme';\nimport { Portfolio } from './Portfolio/Portfolio';\n\nconst AppWrapper = styled.div`\n  background-color: ${({ theme }) => theme.color.dark};\n`;\n\nexport const App = () => {\n  return (\n    <ThemeProvider>\n      <AppWrapper>\n        <Portfolio />\n      </AppWrapper>\n    </ThemeProvider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
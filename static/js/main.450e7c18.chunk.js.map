{"version":3,"sources":["ressources/sw-link.png","ressources/me-effect.png","ressources/Teacher.png","containers/Home/Home.tsx","containers/About/About.tsx","containers/CV/CVCard.tsx","data/cv-data.ts","containers/CV/CV.tsx","containers/Coding/Coding.tsx","containers/Designs/Designs.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Home","props","className","alt","src","swlink","to","About","me","CVCard","style","type","endDate","undefined","startDate","title","subject","details","education","facility","subjectArea","graduation","career","company","profession","subjects","CV","career_items","forEach","elem","push","expand","renderCareerElem","education_items","renderEducationElem","teacher","Coding","Designs","App","path","icon","faUndoAlt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.450e7c18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw-link.40aaf72f.png\";","module.exports = __webpack_public_path__ + \"static/media/me-effect.fadbe983.png\";","module.exports = __webpack_public_path__ + \"static/media/Teacher.6752dc20.png\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Home.css\"\r\nimport swlink from \"../../ressources/sw-link.png\" \r\n\r\nexport function Home(props:any){\r\n    return(\r\n        <>\r\n            <div className=\"link\"><img alt=\"\" src={swlink}/></div>\r\n            <div className=\"content-header\">\r\n                <h1>Welcome!</h1>\r\n            </div>\r\n\r\n            <div className=\"content-body\">\r\n                <Link to=\"/about\"><div className=\"menu-item\">About Me</div></Link>\r\n                <Link to=\"/CV\"><div className=\"menu-item\">CV</div></Link>\r\n                <Link to=\"/coding\"><div className=\"menu-item\">Coding</div></Link>\r\n                <Link to=\"/designs\"><div className=\"menu-item\">Designs</div></Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home","import React from 'react';\r\n\r\nimport \"./About.css\"\r\nimport me from \"../../ressources/me-effect.png\"\r\n\r\nexport function About(props:any){\r\n    return(\r\n        <div>\r\n            <div className=\"pic1\"><img alt=\"\" src={me}/></div>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from 'react';\r\n\r\nimport \"./CV.css\"\r\nimport {education_item, education, career_item, career} from \"../../data/cv-data\"\r\n\r\ntype props = {\r\n    expand:boolean,\r\n    type:string,\r\n    title:string,\r\n    startDate:number,\r\n    endDate:number|undefined,\r\n    subject:string,\r\n    details:string,\r\n}\r\n\r\nexport function CVCard(props:props){\r\n    var style:string\r\n    if (props.type === \"edu\") {\r\n    \tstyle=\"time-education\"\r\n    } else {\r\n    \tstyle=\"time-career\"\r\n    }\r\n    var endDate = (props.endDate === undefined)? \"Now\" : props.endDate\r\n    return(\r\n        <>\r\n            <div className={style}><span>{props.startDate} - {endDate}</span></div>\r\n            <div className=\"content-body\">\r\n                <h2>{props.title}</h2>\r\n                <p>{props.subject}</p>\r\n                <p>{props.details}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CVCard","export type education_item = {\r\n    startDate:number,\r\n    endDate:number|undefined,\r\n    facility:string,\r\n    subjectArea:string,\r\n    graduation:string,\r\n}\r\nexport const education:education_item[] = [\r\n    {\r\n        startDate: 2017,\r\n        endDate:undefined,\r\n        facility:\"Cooperative State University Stuttgart\",\r\n        subjectArea:\"Informatics\",\r\n        graduation:\"Bachelor of Science\",\r\n    },\r\n    {\r\n        startDate: 2015,\r\n        endDate:2017,\r\n        facility:\"Gottlieb-Daimler-Schule 2\",\r\n        subjectArea:\"Industrial Design\",\r\n        graduation:\"State-certified industrial design assistant; Advanced technical college certificate\",\r\n    },\r\n    {\r\n        startDate: 2012,\r\n        endDate:2015,\r\n        facility:\"Steinbeisschule Stuttgart\",\r\n        subjectArea:\"Carpentry\",\r\n        graduation:\"Carpenter journeyman's certificate\",\r\n    },\r\n]\r\n\r\nexport type career_item = {\r\n    startDate:number,\r\n    endDate:number|undefined,\r\n    company:string,\r\n    profession:string,\r\n    subjects?:string[],\r\n}\r\nexport const career:career_item[] = [\r\n    {\r\n        startDate:2017,\r\n        endDate:undefined,\r\n        company:\"heureka e-Business GmbH\",\r\n        profession:\"Web-Development\",\r\n        subjects:[\"ColdFusion\", \"React\", \"MariaDB\"],\r\n    },\r\n    {\r\n        startDate:2012,\r\n        endDate:2015,\r\n        company:\"Scheyhing Holzbau GmbH\",\r\n        profession:\"Carpentry\",\r\n    },\r\n]","import React from 'react';\r\nimport CVCard from \"./CVCard\"\r\n\r\nimport teacher from \"../../ressources/Teacher.png\"\r\nimport \"./CV.css\"\r\nimport {education_item, education, career_item, career} from \"../../data/cv-data\"\r\n\r\n\r\nexport function CV(props:any){\r\n    //Get career\r\n    var renderCareerElem = (elem:career_item) => {\r\n        var subjects:string = \"\"\r\n        if (elem.subjects !== undefined) {\r\n            elem.subjects.forEach(subject => {\r\n                subjects += subject+\"; \"\r\n            });\r\n        }\r\n        return (\r\n            <CVCard\r\n                expand={true}\r\n                type={\"car\"}\r\n                title={elem.company}\r\n                startDate={elem.startDate}\r\n                endDate={elem.endDate}\r\n                subject={elem.profession}\r\n                details={subjects}\r\n            />\r\n        )\r\n    }\r\n    var career_items:JSX.Element[] = []\r\n    career.forEach((elem) => {\r\n        career_items.push(renderCareerElem(elem))\r\n    })\r\n\r\n    //Get education\r\n    var renderEducationElem = (elem:education_item) => {\r\n        return (\r\n            <CVCard\r\n                expand={true}\r\n                type={\"edu\"}\r\n                title={elem.facility}\r\n                startDate={elem.startDate}\r\n                endDate={elem.endDate}\r\n                subject={elem.subjectArea}\r\n                details={elem.graduation}\r\n            />\r\n        )\r\n    }\r\n    var education_items:JSX.Element[] = []\r\n    education.forEach((elem:education_item) => {\r\n        education_items.push(renderEducationElem(elem))\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <div className=\"teacher\"><img alt=\"\" src={teacher}/></div>\r\n            <div className=\"cv-row\">\r\n                <div>\r\n                    <div className=\"content-header\">\r\n                        <h1>Career</h1>\r\n                    </div>\r\n                    {career_items}\r\n                </div>\r\n                <div>\r\n                    <div className=\"content-header\">\r\n                        <h1>Education</h1>\r\n                    </div>\r\n                    {education_items}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CV","import React from 'react';\r\n\r\n\r\nexport function Coding(props:any){\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Coding","import React from 'react';\r\n\r\n\r\nexport function Designs(props:any){\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Designs","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUndoAlt } from '@fortawesome/free-solid-svg-icons'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n//My Sites\nimport Home from \"./containers/Home/Home\"\nimport About from \"./containers/About/About\"\nimport CV from \"./containers/CV/CV\"\nimport Coding from \"./containers/Coding/Coding\"\nimport Designs from \"./containers/Designs/Designs\"\n\n//My Styles\nimport \"./App.css\"\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"content-wrapper\">\n\t\t\t<Router>\n\t\t\t\t<Switch >\n\t\t\t\t\t<Route path=\"/designs\">\n\t\t\t\t\t\t<Designs />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/Coding\">\n\t\t\t\t\t\t<Coding />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/CV\">\n\t\t\t\t\t\t<CV />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t\t<Link to=\"/\"><div className=\"back\"><FontAwesomeIcon icon={faUndoAlt}/></div></Link>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}
{"version":3,"sources":["ressources/sw-link.png","ressources/me.png","ressources/fitness.png","ressources/dark-souls.png","ressources/music.png","ressources/Teacher.png","ressources/default-icon.png","components/Toastify/Toastify.tsx","containers/Home/colors.js","containers/Home/Colorpicker.tsx","containers/Home/Settings.tsx","containers/Home/Home.tsx","containers/About/About.tsx","containers/CV/CVCard.tsx","data/cv-data.ts","containers/CV/CV.tsx","containers/Coding/Project.tsx","containers/Coding/Coding.tsx","containers/Designs/Designs.tsx","containers/Articles/Articles.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Toastify","props","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","limit","toastAction","msg","toast","dismiss","dark","progress","undefined","c","getColors","result","forEach","color","push","material","Settings","useState","displayColorPicker","setDisplayColorPicker","defaultValue","var","className","onClick","colors","onChange","handleColorChange","rgb","r","g","b","a","Colorpicker","Home","displaySettings","setDisplaySettings","header","setHeader","alt","src","swlink","data-text","to","About","birthday","Date","age","getTime","me","icon","faPortrait","Math","floor","fitness","faDumbbell","darksouls","faGamepad","music","faHeart","CVCard","style","type","endDate","startDate","title","subject","details","education","facility","subjectArea","graduation","career","company","profession","subjects","CV","renderCareerElem","elem","renderEducationElem","rows","curEdu","curCar","length","teacher","Project","project","created","latest","lastUpdate","projectYear","getFullYear","description","slice","tags","tag","img","defIcon","name","href","url","faArrowRight","options","value","label","githubRepositories","gitlabRepositories","Coding","projects","currSort","setCurrSort","reload","setReload","projectsJSX","setProjectsJSX","useEffect","gitlabRep","fetch","method","then","res","json","avatar_url","web_url","created_at","last_activity_at","tag_list","githubRep","headers","html_url","pushed_at","topics","sort","sortProjects","tmpPrj","prj","isSearchable","backspaceRemovesValue","placeholder","Designs","Articles","defaultColors","App","root","document","documentElement","Object","keys","key","localStorage","getItem","setProperty","faHome","faEnvelope","faXing","faGithubAlt","faGitlab","path","setItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23c090f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw-link.40aaf72f.png\";","module.exports = __webpack_public_path__ + \"static/media/me.093920a7.png\";","module.exports = __webpack_public_path__ + \"static/media/fitness.8b353ff9.png\";","module.exports = __webpack_public_path__ + \"static/media/dark-souls.b8ba2264.png\";","module.exports = __webpack_public_path__ + \"static/media/music.dbdca655.png\";","module.exports = __webpack_public_path__ + \"static/media/Teacher.6752dc20.png\";","module.exports = __webpack_public_path__ + \"static/media/default-icon.28517636.png\";","import React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport \"./Toastify.css\"\r\n\r\nexport function Toastify(props:any){\r\n    return(\r\n        <ToastContainer\r\n            position=\"top-left\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss={false}\r\n            draggable={false}\r\n            pauseOnHover={false}\r\n            limit={2}\r\n        />\r\n    )\r\n}\r\n\r\nexport function toastAction (msg:string) {\r\n    toast.dismiss();\r\n    toast.dark(msg, {\r\n        position: \"top-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        progress: undefined,\r\n    });\r\n}","import * as material from 'material-colors'\r\n/*\r\nexport const colors = [\r\n    [material.red['900'], material.red['700'], material.red['500'], material.red['300'], material.red['100']],\r\n    [material.pink['900'], material.pink['700'], material.pink['500'], material.pink['300'], material.pink['100']],\r\n    [material.purple['900'], material.purple['700'], material.purple['500'], material.purple['300'], material.purple['100']],\r\n    [material.deepPurple['900'], material.deepPurple['700'], material.deepPurple['500'], material.deepPurple['300'], material.deepPurple['100']],\r\n    [material.indigo['900'], material.indigo['700'], material.indigo['500'], material.indigo['300'], material.indigo['100']],\r\n    [material.blue['900'], material.blue['700'], material.blue['500'], material.blue['300'], material.blue['100']],\r\n    [material.lightBlue['900'], material.lightBlue['700'], material.lightBlue['500'], material.lightBlue['300'], material.lightBlue['100']],\r\n    [material.cyan['900'], material.cyan['700'], material.cyan['500'], material.cyan['300'], material.cyan['100']],\r\n    [material.teal['900'], material.teal['700'], material.teal['500'], material.teal['300'], material.teal['100']],\r\n    ['#194D33', material.green['700'], material.green['500'], material.green['300'], material.green['100']],\r\n    [material.lightGreen['900'], material.lightGreen['700'], material.lightGreen['500'], material.lightGreen['300'], material.lightGreen['100']],\r\n    [material.lime['900'], material.lime['700'], material.lime['500'], material.lime['300'], material.lime['100']],\r\n    [material.yellow['900'], material.yellow['700'], material.yellow['500'], material.yellow['300'], material.yellow['100']],\r\n    [material.amber['900'], material.amber['700'], material.amber['500'], material.amber['300'], material.amber['100']],\r\n    [material.orange['900'], material.orange['700'], material.orange['500'], material.orange['300'], material.orange['100']],\r\n    [material.deepOrange['900'], material.deepOrange['700'], material.deepOrange['500'], material.deepOrange['300'], material.deepOrange['100']],\r\n    [material.brown['900'], material.brown['700'], material.brown['500'], material.brown['300'], material.brown['100']],\r\n    [material.blueGrey['900'], material.blueGrey['700'], material.blueGrey['500'], material.blueGrey['300'], material.blueGrey['100']],\r\n    ['#000000', '#525252', '#969696', '#D9D9D9', '#FFFFFF'],\r\n]\r\n*/\r\n\r\nconst c = [\r\n    \"red\",\r\n    \"pink\",\r\n    \"purple\",\r\n    \"deepPurple\",\r\n    \"indigo\",\r\n    \"blue\",\r\n    \"lightBlue\",\r\n    \"cyan\",\r\n    \"teal\",\r\n    \"green\",\r\n    \"lightGreen\",\r\n    \"lime\",\r\n    \"yellow\",\r\n    \"amber\",\r\n    \"orange\",\r\n    \"deepOrange\",\r\n    \"brown\",\r\n    \"blueGrey\"\r\n]\r\nexport function getColors() {\r\n    var result = [[\r\n        \"rgba(46,46,46,1)\",\r\n        \"rgba(230,230,230,1)\",\r\n        \"rgba(50,200,150,.3)\",\r\n        \"rgba(200, 50, 50, 0.3)\"\r\n    ],[\r\n        \"rgba(30,45,50,1)\",\r\n        \"rgba(220,200,200,1)\",\r\n        \"rgba(0,220,220,.3)\",\r\n        \"rgba(255, 50, 50, 0.3)\"\r\n    ],\r\n]\r\n    c.forEach((color)=>{\r\n        result.push([\r\n            material[color][900],\r\n            material[color][700],\r\n            material[color][500],\r\n            material[color][300],\r\n            material[color][100]\r\n        ])\r\n    })\r\n\r\n    return result\r\n}","import React, {useState} from 'react';\r\nimport { SwatchesPicker } from 'react-color';\r\nimport {getColors} from \"./colors\"\r\n\r\ntype props = {\r\n    handleColorChange: (key: string, color: string) => void,\r\n    var:string,\r\n    defaultValue:string,\r\n}\r\n\r\nexport function Settings(props:props){\r\n    const [displayColorPicker, setDisplayColorPicker]:boolean | any = useState(false)\r\n    const [color, setColor]:string | any = useState(props.defaultValue)\r\n    \r\n    var handleClick = () => {\r\n        setDisplayColorPicker(!displayColorPicker)\r\n    }\r\n    \r\n    var handleClose = () => {\r\n        setDisplayColorPicker(false)\r\n    }\r\n    \r\n    var handleChange = (c:any) => {\r\n        props.handleColorChange(props.var, \"rgba(\"+c.rgb.r+\", \"+c.rgb.g+\", \"+c.rgb.b+\", \"+c.rgb.a+\")\")\r\n    }\r\n    \r\n    //Todo: Colorpicker für eigene Farben und in Local Storage\r\n    \r\n    return(\r\n        <div>\r\n            <p>{props.var}</p>\r\n            <div className=\"swatch\" onClick={handleClick}>\r\n                <div className={props.var} />\r\n            </div>\r\n            {displayColorPicker? \r\n            <div className=\"popover\">\r\n                <div className=\"cover\" onClick={handleClose}/>\r\n                <SwatchesPicker colors={getColors()} onChange={handleChange} />\r\n            </div> : null }\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react';\r\n\r\nimport Colorpicker from \"./Colorpicker\"\r\nimport \"./Settings.css\"\r\n\r\ntype props = {\r\n    handleColorChange: (key: string, color: string) => void,\r\n}\r\n\r\nexport function Settings(props:props){\r\n    //Todo: Colorpicker für eigene Farben und in Local Storage\r\n    return(\r\n        <>\r\n            <div className=\"content-body\">\r\n                <Colorpicker\r\n                    handleColorChange={props.handleColorChange}\r\n                    var=\"bg-color\"\r\n                    defaultValue=\"rgba(46,46,46,255)\"\r\n                />\r\n                <Colorpicker\r\n                    handleColorChange={props.handleColorChange}\r\n                    var=\"default-color\"\r\n                    defaultValue=\"rgba(230,230,230,255)\"\r\n                />\r\n                <Colorpicker\r\n                    handleColorChange={props.handleColorChange}\r\n                    var=\"accent-color\"\r\n                    defaultValue=\"rgba(50,200,150,.3)\"\r\n                />\r\n                <Colorpicker\r\n                    handleColorChange={props.handleColorChange}\r\n                    var=\"accent-color2\"\r\n                    defaultValue=\"rgba(200, 50, 50, 0.3)\"\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Settings","import React, {useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Settings from './Settings';\r\n\r\nimport \"./Home.css\"\r\nimport swlink from \"../../ressources/sw-link.png\" \r\n\r\ntype props = {\r\n    handleColorChange: (key: string, color: string) => void,\r\n}\r\n\r\nexport function Home(props:props){\r\n    const[displaySettings, setDisplaySettings]:boolean|any = useState(false)\r\n    const[header, setHeader]:boolean|any = useState(!displaySettings)\r\n    //Todo: Colorpicker für eigene Farben und in Local Storage\r\n    //let root = document.documentElement;\r\n    //root.style.setProperty('--bg-color', 'rgba(46,46,46,255)');\r\n    return(\r\n        <>\r\n            <div className=\"link\">\r\n                <img\r\n                    alt=\"\"\r\n                    src={swlink}\r\n                    onClick={()=>{\r\n                        setDisplaySettings(!displaySettings)\r\n                        setHeader(!header)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"content-header\">\r\n                <h1>Welcome!</h1>\r\n            </div>\r\n            {displaySettings?(\r\n                <div className=\"color-settings\">\r\n                    <h1 className=\"glitch\" data-text=\"W̴̛̙̝̓̾̀͜e̷̲̹͖̥̯̒̚l̴̥͙̳̀͐ĉ̶̙̱̄̋͘͝ȍ̴͎̀͒̔͒m̷̦͕̖͋́e̶̹̻̩͌̾̂!̷̥̂͝\">W̴̛̙̝̓̾̀͜e̷̲̹͖̥̯̒̚l̴̥͙̳̀͐ĉ̶̙̱̄̋͘͝ȍ̴͎̀͒̔͒m̷̦͕̖͋́e̶̹̻̩͌̾̂!̷̥̂͝</h1>\r\n                    <Settings\r\n                        handleColorChange={props.handleColorChange}\r\n                    />\r\n                </div>\r\n            ):null}\r\n\r\n            <div className=\"content-body\">\r\n                <Link to=\"/about\"><div className=\"menu-item\">About Me</div></Link>\r\n                <Link to=\"/CV\"><div className=\"menu-item\">CV</div></Link>\r\n                <Link to=\"/coding\"><div className=\"menu-item\">Coding</div></Link>\r\n                <Link to=\"/designs\"><div className=\"menu-item\">Designs (Work in Progress)</div></Link>\r\n                <Link to=\"/articles\"><div className=\"menu-item\">Articles (Work in Progress)</div></Link>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Home","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPortrait, faGamepad, faDumbbell } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport \"./About.css\"\r\nimport me from \"../../ressources/me.png\"\r\nimport fitness from \"../../ressources/fitness.png\"\r\nimport darksouls from \"../../ressources/dark-souls.png\"\r\n//import bouldering from \"../../ressources/bouldering.png\"\r\nimport music from \"../../ressources/music.png\"\r\n\r\n\r\nexport function About(props:any){\r\n    //let age = new Date('1996-05-17T00:00:00')\r\n    let birthday = new Date(1996, 4, 17)\r\n    let age = (new Date().getTime() - birthday.getTime()) / 1000 / 60 / 60 / 24 / 365\r\n    //let age = Math.floor(new Date() - birthday)\r\n    return(\r\n        <div>\r\n            <div className=\"content-header content-header-me\">\r\n                <h1>About Me</h1>\r\n            </div>\r\n            <div className=\"pic-r\"><img alt=\"\" src={me}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Details <FontAwesomeIcon className=\"h2-icon\" icon={faPortrait}/></h2>\r\n                <p>\r\n                    Jonathan<br/>\r\n                    {Math.floor(age)} years old<br/>\r\n                    B.Sc. Informatics<br/>\r\n                    Web-Developer<br/>\r\n                    German | English<br/>\r\n                </p>\r\n            </div>\r\n            <div className=\"pic-l\"><img alt=\"\" src={fitness}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Sports <FontAwesomeIcon className=\"h2-icon\" icon={faDumbbell}/></h2>\r\n                <p>\r\n                In my opinion, sport is important for mental health and the body itself.<br/>\r\n                That's one of the reasons why I do both bouldering and climbing - besides my little obsession of it.\r\n                </p>\r\n            </div>\r\n            <div className=\"pic-r\"><img alt=\"\" src={darksouls}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Videogames <FontAwesomeIcon className=\"h2-icon\" icon={faGamepad}/></h2>\r\n                <p>\r\n                Videogames are a great hobby to calm and train your mind. <br/>\r\n                Besides ARPGs like Dark Souls I am also playing rythm games like Beat-Saber. And much more of course if there is enough spare time left!\r\n                </p>\r\n            </div>\r\n            <div className=\"pic-l\"><img alt=\"\" src={music}/></div>\r\n            <div className=\"content-body content-body-me\">\r\n                <h2>Music I <FontAwesomeIcon className=\"h2-icon\" icon={faHeart}/></h2>\r\n                <p>\r\n                    I am always listening to music since it always fits in every mood. I have been jumping between many genres the last years. To name some of them:<br/>\r\n                    - Doom/Black Metal<br/>\r\n                    - Lofi Hip-Hop<br/>\r\n                    - Videogame Soundtracks<br/>\r\n                    - Speedcore<br/>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from 'react';\r\n\r\nimport \"./CV.css\"\r\n\r\ntype props = {\r\n    type:string,\r\n    title:string,\r\n    startDate:number,\r\n    endDate:number|undefined,\r\n    subject:string,\r\n    details:string,\r\n}\r\n\r\nexport function CVCard(props:props){\r\n    var style:string\r\n    if (props.type === \"edu\") {\r\n    \tstyle=\"time-education\"\r\n    } else {\r\n    \tstyle=\"time-career\"\r\n    }\r\n    var endDate = (props.endDate === 0)? \"Now\" : props.endDate\r\n    return(\r\n        <>\r\n            <div className={style}><span>{props.startDate} - {endDate}</span></div>\r\n            <div className=\"content-body\">\r\n                <h2>{props.title}</h2>\r\n                <p>{props.subject}</p>\r\n                <p>{props.details}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CVCard","export type education_item = {\r\n    startDate:number,\r\n    endDate:number,\r\n    facility:string,\r\n    subjectArea:string,\r\n    graduation:string,\r\n}\r\nexport const education:education_item[] = [\r\n    {\r\n        startDate: 2017,\r\n        endDate:0,\r\n        facility:\"Cooperative State University Stuttgart\",\r\n        subjectArea:\"Informatics\",\r\n        graduation:\"Bachelor of Science\",\r\n    },\r\n    {\r\n        startDate: 2015,\r\n        endDate:2017,\r\n        facility:\"Gottlieb-Daimler-Schule 2\",\r\n        subjectArea:\"Industrial Design\",\r\n        graduation:\"State-certified industrial design assistant; Advanced technical college certificate\",\r\n    },\r\n    {\r\n        startDate: 2012,\r\n        endDate:2015,\r\n        facility:\"Steinbeisschule Stuttgart\",\r\n        subjectArea:\"Carpentry\",\r\n        graduation:\"Carpenter journeyman's certificate\",\r\n    },\r\n]\r\n\r\nexport type career_item = {\r\n    startDate:number,\r\n    endDate:number,\r\n    company:string,\r\n    profession:string,\r\n    subjects:string[],\r\n}\r\nexport const career:career_item[] = [\r\n    {\r\n        startDate:2017,\r\n        endDate:0,\r\n        company:\"heureka e-Business GmbH\",\r\n        profession:\"Web-Development\",\r\n        subjects:[\"ColdFusion\", \"React\", \"MariaDB\"],\r\n    },\r\n    {\r\n        startDate:2012,\r\n        endDate:2015,\r\n        company:\"Scheyhing Holzbau GmbH\",\r\n        profession:\"Carpentry\",\r\n        subjects:[]\r\n    },\r\n]","import React from 'react';\r\nimport CVCard from \"./CVCard\"\r\n\r\nimport teacher from \"../../ressources/Teacher.png\"\r\nimport \"./CV.css\"\r\nimport {education_item, education, career_item, career} from \"../../data/cv-data\"\r\n\r\nexport function CV(props:any){\r\n\r\n    //Get CVCard with career details\r\n    let renderCareerElem = (elem:career_item) => {\r\n        let subjects:string = \"\"\r\n        if (elem.subjects) {\r\n            elem.subjects.forEach(subject => {\r\n                subjects += subject+\"; \"\r\n            });\r\n        }\r\n        return (\r\n            <CVCard\r\n                type={\"car\"}\r\n                title={elem.company}\r\n                startDate={elem.startDate}\r\n                endDate={elem.endDate}\r\n                subject={elem.profession}\r\n                details={subjects}\r\n            />\r\n        )\r\n    }\r\n            \r\n    //Get CVCard with education details\r\n    let renderEducationElem = (elem:education_item) => {\r\n        return (\r\n            <CVCard\r\n                type={\"edu\"}\r\n                title={elem.facility}\r\n                startDate={elem.startDate}\r\n                endDate={elem.endDate}\r\n                subject={elem.subjectArea}\r\n                details={elem.graduation}\r\n            />\r\n        )\r\n    }\r\n\r\n    //Get alle rows of cv\r\n    let rows:JSX.Element[] = []\r\n    let curEdu = 0\r\n    let curCar = 0\r\n    for (;true;) {\r\n        if (education[curEdu] && career[curCar] && education[curEdu].endDate === career[curCar].endDate) {\r\n            rows.push(\r\n                <div className=\"cv-row\">\r\n                    {renderCareerElem(career[curCar])}\r\n                    {renderEducationElem(education[curEdu])}\r\n                </div>\r\n            )\r\n            curEdu++\r\n            curCar++\r\n        } else {\r\n            if (!education[curEdu]\r\n                || career[curCar].endDate === 0\r\n                || (career[curCar] && career[curCar].endDate > education[curEdu]?.endDate)) {\r\n                rows.push(\r\n                    <div className=\"cv-row\">\r\n                        {renderCareerElem(career[curCar])}\r\n                        <span className=\"empty-cv-card\"></span>\r\n                    </div>\r\n                )\r\n                curCar++\r\n            } else if (education[curEdu]) {\r\n                rows.push(\r\n                    <div className=\"cv-row\">\r\n                        <span className=\"empty-cv-card\"></span>\r\n                        {renderEducationElem(education[curEdu])}\r\n                    </div>\r\n                )\r\n                curEdu++\r\n            }\r\n        }\r\n        if (curEdu === education.length && curCar === career.length) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"cv-content\">\r\n                <div className=\"cv-row\">\r\n                    <div className=\"content-header cv-desktop-header\">\r\n                        <h1>Career</h1>\r\n                    </div>\r\n                    <div className=\"content-header cv-desktop-header\">\r\n                        <h1>Education</h1>\r\n                    </div>\r\n                    <div className=\"content-header cv-mobile-header\">\r\n                        <h1>{\"Career|Education\"}</h1>\r\n                    </div>\r\n                    <div className=\"teacher\"><img alt=\"\" src={teacher}/></div>\r\n                </div>\r\n                {rows}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CV","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport \"./Coding.css\"\r\nimport defIcon from \"../../ressources/default-icon.png\"\r\n\r\ntype project = {\r\n    img:string,\r\n    name:string,\r\n    description:string,\r\n    url:string,\r\n    created:string,\r\n    lastUpdate:string,\r\n    tags:string[],\r\n}\r\n\r\nexport function Project(project:project){\r\n    var created = new Date(project.created)\r\n    var latest = new Date(project.lastUpdate)\r\n    var projectYear:string = (created.getFullYear() === latest.getFullYear())?created.getFullYear()+\"\":created.getFullYear() + \"-\" + latest.getFullYear()\r\n\r\n    var description = (project.description.length > 77)?project.description.slice(0,77)+\"...\":project.description\r\n\r\n    var tags:JSX.Element[] = []\r\n    project.tags.forEach(tag => {\r\n        tags.push(\r\n            <span>\r\n                {tag}\r\n            </span>\r\n        )\r\n    });\r\n    return(\r\n            //Todo:Dropdown mit Sortiermöglichkeiten\r\n            //<div>latest change: {latest.toLocaleDateString('en-US')}</div>\r\n        <>\r\n            <div className=\"time-project\"><span>{projectYear}</span></div>\r\n            <div className=\"project-container\">\r\n                <div className=\"project-image\"><img src={(project.img)?project.img:defIcon} alt=\"Project Avatar\"/></div>\r\n                <div className=\"project-details\">\r\n                    <h2>{project.name}</h2>\r\n                    <div className=\"tag-container\">{tags}</div>\r\n                    <p className=\"project-description\">\r\n                        {(project.description !== \"\")?description:\"No description available\"}\r\n                    </p>\r\n                    <a className=\"project-button\" href={project.url}>Go to Project <FontAwesomeIcon icon={faArrowRight}/></a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Project","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport {toastAction} from \"../../components/Toastify/Toastify\"\r\n\r\nimport Project from \"./Project\"\r\nimport \"./Coding.css\"\r\n\r\ntype project = {\r\n    img:string,\r\n    name:string,\r\n    description:string,\r\n    url:string,\r\n    created:string,\r\n    lastUpdate:string,\r\n    tags:string[],\r\n}\r\n\r\nconst options = [\r\n    { value: 'chgUp',     label: 'latest change' },\r\n    { value: 'crtUp',     label: 'newest created' },\r\n    { value: 'crtDown',   label: 'oldest created' },\r\n]\r\n/*\r\nGthub Repo:\r\n    https://api.github.com/repos/PrettyCoffee/PrettyCoffee.github.io\r\nGet Content of Repo: \r\n    https://api.github.com/repos/PrettyCoffee/PrettyCoffee.github.io/contents\r\n*/\r\n\r\nconst githubRepositories = [\r\n    \"PrettyCoffee/PrettyCoffee.github.io\",\r\n]\r\nconst gitlabRepositories = [\r\n    \"14827017\",\r\n    \"14252893\",\r\n    \"16123962\",\r\n]\r\n\r\nexport function Coding(props:any){\r\n    const [projects]:project[] | any = useState([])\r\n    const [currSort, setCurrSort]:any = useState(options[0])\r\n    const [reload, setReload]:boolean | any = useState(true)\r\n    const [projectsJSX, setProjectsJSX]:JSX.Element[] | any = useState([])\r\n    \r\n    //get all wanted projects\r\n    useEffect(() => {\r\n        gitlabRepositories.forEach(gitlabRep => {\r\n            fetch(\"https://gitlab.com/api/v4/projects/\"+gitlabRep+\"/\", {\r\n                method:'GET'\r\n            })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                projects.push({\r\n                    img:        result.avatar_url,\r\n                    name:       result.name,\r\n                    description:result.description,\r\n                    url:        result.web_url,\r\n                    created:    result.created_at,\r\n                    lastUpdate: result.last_activity_at,\r\n                    tags:       (result.tag_list)?result.tag_list:[],\r\n                })\r\n                setReload(true)\r\n            })\r\n        });\r\n        githubRepositories.forEach(githubRep => {\r\n            fetch(\"https://api.github.com/repos/\"+githubRep,{\r\n                method:'GET',\r\n                headers: {\r\n                    'Accept':'application/vnd.github.mercy-preview+json'\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                projects.push({\r\n                    img:        null,\r\n                    name:       result.name,\r\n                    description:result.description,\r\n                    url:        result.html_url,\r\n                    created:    result.created_at,\r\n                    lastUpdate: result.pushed_at,\r\n                    tags:       (result.topics)?result.topics:[],\r\n                })\r\n                projects.sort(sortProjects)\r\n                setReload(true)\r\n            })    \r\n        });\r\n    },[]);\r\n\r\n    var reloadProjects = (options:any) => {\r\n        toastAction('Sorted by '+options.label)\r\n        setCurrSort(options)\r\n        setReload(true)\r\n    }\r\n    var sortProjects = (a:project,b:project) => {\r\n        let result:number = 1\r\n        switch (currSort.value){\r\n            case options[0].value:\r\n                result = new Date(b.lastUpdate).getTime() - new Date(a.lastUpdate).getTime()\r\n            break\r\n            case options[1].value:\r\n                result = new Date(b.created).getTime() - new Date(a.created).getTime()\r\n            break\r\n            case options[2].value:\r\n                result = new Date(a.created).getTime() - new Date(b.created).getTime()\r\n        }\r\n        return result\r\n    }\r\n\r\n    //Update jsx if project is added\r\n    useEffect(() => {\r\n        if(projects !== undefined && reload === true) {\r\n            projects.sort(sortProjects)\r\n            var tmpPrj:JSX.Element[] = []\r\n            projects.forEach((prj:project) => {\r\n                tmpPrj.push(\r\n                    <Project\r\n                        {...prj}\r\n                    />\r\n                )\r\n            })\r\n            setReload(false)\r\n            setProjectsJSX([...tmpPrj])\r\n        }\r\n    }, [reload])\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"content-header coding-header\">\r\n                <h1>Coding Projects</h1>\r\n            </div>\r\n            <Select \r\n                className=\"coding-sort\"\r\n                options={options}\r\n                onChange={reloadProjects}\r\n                isSearchable={false}\r\n                backspaceRemovesValue={false}\r\n                placeholder=\"sort by\"\r\n            />\r\n            <div>\r\n            {projectsJSX}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Coding","import React from 'react';\r\n\r\n\r\nexport function Designs(props:any){\r\n    return(\r\n        <div>\r\n            {\"//TODO\"}\r\n        </div>\r\n    )\r\n}\r\nexport default Designs","import React from 'react';\r\n\r\nexport function Articles(props:any){\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n}\r\nexport default Articles","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithubAlt, faGitlab, faXing } from '@fortawesome/free-brands-svg-icons'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nimport {Toastify, toastAction} from \"./components/Toastify/Toastify\"\r\n\r\n//My Sites\r\nimport Home from \"./containers/Home/Home\"\r\nimport About from \"./containers/About/About\"\r\nimport CV from \"./containers/CV/CV\"\r\nimport Coding from \"./containers/Coding/Coding\"\r\nimport Designs from \"./containers/Designs/Designs\"\r\nimport Articles from \"./containers/Articles/Articles\"\r\n\r\nimport \"./App.css\"\r\n\r\ntype colors = {\r\n\t[key:string]:string\r\n\t'bg-color':string,\r\n\t'default-color':string,\r\n\t'accent-color':string,\r\n\t'accent-color2':string,\r\n}\r\nconst defaultColors:colors = {\r\n\t'bg-color': \"rgba(46,46,46,255)\",\r\n\t'default-color': \"rgba(230,230,230,255)\",\r\n\t'accent-color': \"rgba(50,200,150,.3)\",\r\n\t'accent-color2': \"rgba(200, 50, 50, 0.3)\",\r\n}\r\nexport default function App() {\r\n\t//Prepare colors\r\n\tvar root = document.documentElement;\r\n\tObject.keys(defaultColors).forEach(key => {\r\n\t\tvar c = localStorage.getItem(key)\r\n\t\tif (c) {\r\n\t\t\troot.style.setProperty(\"--\"+key, c);\r\n\t\t}\r\n\t});\r\n\r\n\tvar handleColorChange = (key:string, color:string) => {\r\n\t\troot.style.setProperty(\"--\"+key, color);\r\n\t\ttoastAction(key+' changed to '+color)\r\n\t\tlocalStorage.setItem(key, color);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"content-wrapper\">\r\n\t\t\t<Toastify/>\r\n\t\t\t<Router>\r\n\t\t\t<div className=\"icon-container\">\r\n\t\t\t\t<Link className=\"back\" to=\"/\"><FontAwesomeIcon icon={faHome}/></Link>\r\n\t\t\t\t<a href=\"MailTo:jonathan-holz@outlook.com\">\r\n\t\t\t\t\t<FontAwesomeIcon  icon={faEnvelope}/>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://www.xing.com/profile/Jonathan_Holz2/cv\">\r\n\t\t\t\t\t<FontAwesomeIcon  icon={faXing}/>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://github.com/PrettyCoffee\">\r\n\t\t\t\t\t<FontAwesomeIcon  icon={faGithubAlt}/>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://gitlab.com/PrettyCoffee\">\r\n\t\t\t\t\t<FontAwesomeIcon  icon={faGitlab}/>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t\t\t<Switch >\r\n\t\t\t\t\t<Route path=\"/articles\">\r\n\t\t\t\t\t\t<Articles />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/designs\">\r\n\t\t\t\t\t\t<Designs />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/Coding\">\r\n\t\t\t\t\t\t<Coding />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/about\">\r\n\t\t\t\t\t\t<About />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/CV\">\r\n\t\t\t\t\t\t<CV />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t\t<Home \r\n\t\t\t\t\t\t\thandleColorChange={handleColorChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}